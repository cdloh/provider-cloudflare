/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type TunnelVirtualNetworkObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type TunnelVirtualNetworkParameters struct {

	// The account identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	// +crossplane:generate:reference:type=github.com/cdloh/provider-cloudflare/apis/account/v1alpha1.Account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Reference to a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDRef *v1.Reference `json:"accountIdRef,omitempty" tf:"-"`

	// Selector for a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDSelector *v1.Selector `json:"accountIdSelector,omitempty" tf:"-"`

	// Description of the tunnel virtual network.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Whether this virtual network is the default one for the account. This means IP Routes belong to this virtual network and Teams Clients in the account route through this virtual network, unless specified otherwise for each case.
	// +kubebuilder:validation:Optional
	IsDefaultNetwork *bool `json:"isDefaultNetwork,omitempty" tf:"is_default_network,omitempty"`

	// A user-friendly name chosen when the virtual network is created.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`
}

// TunnelVirtualNetworkSpec defines the desired state of TunnelVirtualNetwork
type TunnelVirtualNetworkSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     TunnelVirtualNetworkParameters `json:"forProvider"`
}

// TunnelVirtualNetworkStatus defines the observed state of TunnelVirtualNetwork.
type TunnelVirtualNetworkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        TunnelVirtualNetworkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// TunnelVirtualNetwork is the Schema for the TunnelVirtualNetworks API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type TunnelVirtualNetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              TunnelVirtualNetworkSpec   `json:"spec"`
	Status            TunnelVirtualNetworkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// TunnelVirtualNetworkList contains a list of TunnelVirtualNetworks
type TunnelVirtualNetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []TunnelVirtualNetwork `json:"items"`
}

// Repository type metadata.
var (
	TunnelVirtualNetwork_Kind             = "TunnelVirtualNetwork"
	TunnelVirtualNetwork_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: TunnelVirtualNetwork_Kind}.String()
	TunnelVirtualNetwork_KindAPIVersion   = TunnelVirtualNetwork_Kind + "." + CRDGroupVersion.String()
	TunnelVirtualNetwork_GroupVersionKind = CRDGroupVersion.WithKind(TunnelVirtualNetwork_Kind)
)

func init() {
	SchemeBuilder.Register(&TunnelVirtualNetwork{}, &TunnelVirtualNetworkList{})
}
