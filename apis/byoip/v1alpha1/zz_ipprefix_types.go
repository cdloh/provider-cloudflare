/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type IPPrefixObservation struct {
	ID *string `json:"id,omitempty" tf:"id,omitempty"`
}

type IPPrefixParameters struct {

	// The account identifier to target for the resource.
	// +crossplane:generate:reference:type=github.com/cdloh/provider-cloudflare/apis/account/v1alpha1.Account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Reference to a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDRef *v1.Reference `json:"accountIdRef,omitempty" tf:"-"`

	// Selector for a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDSelector *v1.Selector `json:"accountIdSelector,omitempty" tf:"-"`

	// Whether or not the prefix shall be announced. A prefix can be activated or deactivated once every 15 minutes (attempting more regular updates will trigger rate limiting). Available values: `on`, `off`.
	// +kubebuilder:validation:Optional
	Advertisement *string `json:"advertisement,omitempty" tf:"advertisement,omitempty"`

	// Description of the BYO IP prefix.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The assigned Bring-Your-Own-IP prefix ID. **Modifying this attribute will force creation of a new resource.**
	// +kubebuilder:validation:Required
	PrefixID *string `json:"prefixId" tf:"prefix_id,omitempty"`
}

// IPPrefixSpec defines the desired state of IPPrefix
type IPPrefixSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     IPPrefixParameters `json:"forProvider"`
}

// IPPrefixStatus defines the observed state of IPPrefix.
type IPPrefixStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        IPPrefixObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// IPPrefix is the Schema for the IPPrefixs API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type IPPrefix struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              IPPrefixSpec   `json:"spec"`
	Status            IPPrefixStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// IPPrefixList contains a list of IPPrefixs
type IPPrefixList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []IPPrefix `json:"items"`
}

// Repository type metadata.
var (
	IPPrefix_Kind             = "IPPrefix"
	IPPrefix_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: IPPrefix_Kind}.String()
	IPPrefix_KindAPIVersion   = IPPrefix_Kind + "." + CRDGroupVersion.String()
	IPPrefix_GroupVersionKind = CRDGroupVersion.WithKind(IPPrefix_Kind)
)

func init() {
	SchemeBuilder.Register(&IPPrefix{}, &IPPrefixList{})
}
