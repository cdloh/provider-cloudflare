/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ConfigurationInitParameters struct {

	// The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ConfigurationObservation struct {

	// The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type ConfigurationParameters struct {

	// The configuration target for this rule. You must set the target to ua for User Agent Blocking rules.
	// +kubebuilder:validation:Optional
	Target *string `json:"target,omitempty" tf:"target,omitempty"`

	// The exact user agent string to match. This value will be compared to the received User-Agent HTTP header value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type UserAgentBlockingRuleInitParameters struct {

	// The configuration object for the current rule.
	Configuration []ConfigurationInitParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// An informative summary of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The action to apply to a matched request. Available values: `block`, `challenge`, `js_challenge`, `managed_challenge`.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// When true, indicates that the rule is currently paused.
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`
}

type UserAgentBlockingRuleObservation struct {

	// The configuration object for the current rule.
	Configuration []ConfigurationObservation `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// An informative summary of the rule.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The action to apply to a matched request. Available values: `block`, `challenge`, `js_challenge`, `managed_challenge`.
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// When true, indicates that the rule is currently paused.
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`
}

type UserAgentBlockingRuleParameters struct {

	// The configuration object for the current rule.
	// +kubebuilder:validation:Optional
	Configuration []ConfigurationParameters `json:"configuration,omitempty" tf:"configuration,omitempty"`

	// An informative summary of the rule.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The action to apply to a matched request. Available values: `block`, `challenge`, `js_challenge`, `managed_challenge`.
	// +kubebuilder:validation:Optional
	Mode *string `json:"mode,omitempty" tf:"mode,omitempty"`

	// When true, indicates that the rule is currently paused.
	// +kubebuilder:validation:Optional
	Paused *bool `json:"paused,omitempty" tf:"paused,omitempty"`

	// The zone identifier to target for the resource. **Modifying this attribute will force creation of a new resource.**
	// +crossplane:generate:reference:type=Zone
	// +kubebuilder:validation:Optional
	ZoneID *string `json:"zoneId,omitempty" tf:"zone_id,omitempty"`

	// Reference to a Zone to populate zoneId.
	// +kubebuilder:validation:Optional
	ZoneIDRef *v1.Reference `json:"zoneIdRef,omitempty" tf:"-"`

	// Selector for a Zone to populate zoneId.
	// +kubebuilder:validation:Optional
	ZoneIDSelector *v1.Selector `json:"zoneIdSelector,omitempty" tf:"-"`
}

// UserAgentBlockingRuleSpec defines the desired state of UserAgentBlockingRule
type UserAgentBlockingRuleSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     UserAgentBlockingRuleParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider UserAgentBlockingRuleInitParameters `json:"initProvider,omitempty"`
}

// UserAgentBlockingRuleStatus defines the observed state of UserAgentBlockingRule.
type UserAgentBlockingRuleStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        UserAgentBlockingRuleObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// UserAgentBlockingRule is the Schema for the UserAgentBlockingRules API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type UserAgentBlockingRule struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.configuration) || has(self.initProvider.configuration)",message="configuration is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.description) || has(self.initProvider.description)",message="description is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.mode) || has(self.initProvider.mode)",message="mode is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.paused) || has(self.initProvider.paused)",message="paused is a required parameter"
	Spec   UserAgentBlockingRuleSpec   `json:"spec"`
	Status UserAgentBlockingRuleStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// UserAgentBlockingRuleList contains a list of UserAgentBlockingRules
type UserAgentBlockingRuleList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []UserAgentBlockingRule `json:"items"`
}

// Repository type metadata.
var (
	UserAgentBlockingRule_Kind             = "UserAgentBlockingRule"
	UserAgentBlockingRule_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: UserAgentBlockingRule_Kind}.String()
	UserAgentBlockingRule_KindAPIVersion   = UserAgentBlockingRule_Kind + "." + CRDGroupVersion.String()
	UserAgentBlockingRule_GroupVersionKind = CRDGroupVersion.WithKind(UserAgentBlockingRule_Kind)
)

func init() {
	SchemeBuilder.Register(&UserAgentBlockingRule{}, &UserAgentBlockingRuleList{})
}
