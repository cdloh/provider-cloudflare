//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright 2022 Upbound Inc.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionInitParameters) DeepCopyInto(out *ActionInitParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = make([]ResponseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionInitParameters.
func (in *ActionInitParameters) DeepCopy() *ActionInitParameters {
	if in == nil {
		return nil
	}
	out := new(ActionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionObservation) DeepCopyInto(out *ActionObservation) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = make([]ResponseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionObservation.
func (in *ActionObservation) DeepCopy() *ActionObservation {
	if in == nil {
		return nil
	}
	out := new(ActionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ActionParameters) DeepCopyInto(out *ActionParameters) {
	*out = *in
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = make([]ResponseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ActionParameters.
func (in *ActionParameters) DeepCopy() *ActionParameters {
	if in == nil {
		return nil
	}
	out := new(ActionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServer) DeepCopyInto(out *CacheServer) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServer.
func (in *CacheServer) DeepCopy() *CacheServer {
	if in == nil {
		return nil
	}
	out := new(CacheServer)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheServer) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServerInitParameters) DeepCopyInto(out *CacheServerInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServerInitParameters.
func (in *CacheServerInitParameters) DeepCopy() *CacheServerInitParameters {
	if in == nil {
		return nil
	}
	out := new(CacheServerInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServerList) DeepCopyInto(out *CacheServerList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]CacheServer, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServerList.
func (in *CacheServerList) DeepCopy() *CacheServerList {
	if in == nil {
		return nil
	}
	out := new(CacheServerList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *CacheServerList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServerObservation) DeepCopyInto(out *CacheServerObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServerObservation.
func (in *CacheServerObservation) DeepCopy() *CacheServerObservation {
	if in == nil {
		return nil
	}
	out := new(CacheServerObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServerParameters) DeepCopyInto(out *CacheServerParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServerParameters.
func (in *CacheServerParameters) DeepCopy() *CacheServerParameters {
	if in == nil {
		return nil
	}
	out := new(CacheServerParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServerSpec) DeepCopyInto(out *CacheServerSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServerSpec.
func (in *CacheServerSpec) DeepCopy() *CacheServerSpec {
	if in == nil {
		return nil
	}
	out := new(CacheServerSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CacheServerStatus) DeepCopyInto(out *CacheServerStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CacheServerStatus.
func (in *CacheServerStatus) DeepCopy() *CacheServerStatus {
	if in == nil {
		return nil
	}
	out := new(CacheServerStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationInitParameters) DeepCopyInto(out *ConfigurationInitParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationInitParameters.
func (in *ConfigurationInitParameters) DeepCopy() *ConfigurationInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationObservation) DeepCopyInto(out *ConfigurationObservation) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationObservation.
func (in *ConfigurationObservation) DeepCopy() *ConfigurationObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationParameters) DeepCopyInto(out *ConfigurationParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationParameters.
func (in *ConfigurationParameters) DeepCopy() *ConfigurationParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationsInitParameters) DeepCopyInto(out *ConfigurationsInitParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationsInitParameters.
func (in *ConfigurationsInitParameters) DeepCopy() *ConfigurationsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationsObservation) DeepCopyInto(out *ConfigurationsObservation) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationsObservation.
func (in *ConfigurationsObservation) DeepCopy() *ConfigurationsObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigurationsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigurationsParameters) DeepCopyInto(out *ConfigurationsParameters) {
	*out = *in
	if in.Target != nil {
		in, out := &in.Target, &out.Target
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigurationsParameters.
func (in *ConfigurationsParameters) DeepCopy() *ConfigurationsParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigurationsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelateInitParameters) DeepCopyInto(out *CorrelateInitParameters) {
	*out = *in
	if in.By != nil {
		in, out := &in.By, &out.By
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelateInitParameters.
func (in *CorrelateInitParameters) DeepCopy() *CorrelateInitParameters {
	if in == nil {
		return nil
	}
	out := new(CorrelateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelateObservation) DeepCopyInto(out *CorrelateObservation) {
	*out = *in
	if in.By != nil {
		in, out := &in.By, &out.By
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelateObservation.
func (in *CorrelateObservation) DeepCopy() *CorrelateObservation {
	if in == nil {
		return nil
	}
	out := new(CorrelateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CorrelateParameters) DeepCopyInto(out *CorrelateParameters) {
	*out = *in
	if in.By != nil {
		in, out := &in.By, &out.By
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CorrelateParameters.
func (in *CorrelateParameters) DeepCopy() *CorrelateParameters {
	if in == nil {
		return nil
	}
	out := new(CorrelateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSEC) DeepCopyInto(out *DNSSEC) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSEC.
func (in *DNSSEC) DeepCopy() *DNSSEC {
	if in == nil {
		return nil
	}
	out := new(DNSSEC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSSEC) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECInitParameters) DeepCopyInto(out *DNSSECInitParameters) {
	*out = *in
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECInitParameters.
func (in *DNSSECInitParameters) DeepCopy() *DNSSECInitParameters {
	if in == nil {
		return nil
	}
	out := new(DNSSECInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECList) DeepCopyInto(out *DNSSECList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DNSSEC, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECList.
func (in *DNSSECList) DeepCopy() *DNSSECList {
	if in == nil {
		return nil
	}
	out := new(DNSSECList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DNSSECList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECObservation) DeepCopyInto(out *DNSSECObservation) {
	*out = *in
	if in.Algorithm != nil {
		in, out := &in.Algorithm, &out.Algorithm
		*out = new(string)
		**out = **in
	}
	if in.Digest != nil {
		in, out := &in.Digest, &out.Digest
		*out = new(string)
		**out = **in
	}
	if in.DigestAlgorithm != nil {
		in, out := &in.DigestAlgorithm, &out.DigestAlgorithm
		*out = new(string)
		**out = **in
	}
	if in.DigestType != nil {
		in, out := &in.DigestType, &out.DigestType
		*out = new(string)
		**out = **in
	}
	if in.Ds != nil {
		in, out := &in.Ds, &out.Ds
		*out = new(string)
		**out = **in
	}
	if in.Flags != nil {
		in, out := &in.Flags, &out.Flags
		*out = new(float64)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyTag != nil {
		in, out := &in.KeyTag, &out.KeyTag
		*out = new(float64)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.PublicKey != nil {
		in, out := &in.PublicKey, &out.PublicKey
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECObservation.
func (in *DNSSECObservation) DeepCopy() *DNSSECObservation {
	if in == nil {
		return nil
	}
	out := new(DNSSECObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECParameters) DeepCopyInto(out *DNSSECParameters) {
	*out = *in
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECParameters.
func (in *DNSSECParameters) DeepCopy() *DNSSECParameters {
	if in == nil {
		return nil
	}
	out := new(DNSSECParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECSpec) DeepCopyInto(out *DNSSECSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECSpec.
func (in *DNSSECSpec) DeepCopy() *DNSSECSpec {
	if in == nil {
		return nil
	}
	out := new(DNSSECSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DNSSECStatus) DeepCopyInto(out *DNSSECStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DNSSECStatus.
func (in *DNSSECStatus) DeepCopy() *DNSSECStatus {
	if in == nil {
		return nil
	}
	out := new(DNSSECStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderInitParameters) DeepCopyInto(out *HeaderInitParameters) {
	*out = *in
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderInitParameters.
func (in *HeaderInitParameters) DeepCopy() *HeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderObservation) DeepCopyInto(out *HeaderObservation) {
	*out = *in
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderObservation.
func (in *HeaderObservation) DeepCopy() *HeaderObservation {
	if in == nil {
		return nil
	}
	out := new(HeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HeaderParameters) DeepCopyInto(out *HeaderParameters) {
	*out = *in
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = new(string)
		**out = **in
	}
	if in.Values != nil {
		in, out := &in.Values, &out.Values
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HeaderParameters.
func (in *HeaderParameters) DeepCopy() *HeaderParameters {
	if in == nil {
		return nil
	}
	out := new(HeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Healthcheck) DeepCopyInto(out *Healthcheck) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Healthcheck.
func (in *Healthcheck) DeepCopy() *Healthcheck {
	if in == nil {
		return nil
	}
	out := new(Healthcheck)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Healthcheck) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthcheckInitParameters) DeepCopyInto(out *HealthcheckInitParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.CheckRegions != nil {
		in, out := &in.CheckRegions, &out.CheckRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConsecutiveFails != nil {
		in, out := &in.ConsecutiveFails, &out.ConsecutiveFails
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveSuccesses != nil {
		in, out := &in.ConsecutiveSuccesses, &out.ConsecutiveSuccesses
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpectedBody != nil {
		in, out := &in.ExpectedBody, &out.ExpectedBody
		*out = new(string)
		**out = **in
	}
	if in.ExpectedCodes != nil {
		in, out := &in.ExpectedCodes, &out.ExpectedCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.Suspended != nil {
		in, out := &in.Suspended, &out.Suspended
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthcheckInitParameters.
func (in *HealthcheckInitParameters) DeepCopy() *HealthcheckInitParameters {
	if in == nil {
		return nil
	}
	out := new(HealthcheckInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthcheckList) DeepCopyInto(out *HealthcheckList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Healthcheck, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthcheckList.
func (in *HealthcheckList) DeepCopy() *HealthcheckList {
	if in == nil {
		return nil
	}
	out := new(HealthcheckList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthcheckList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthcheckObservation) DeepCopyInto(out *HealthcheckObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.CheckRegions != nil {
		in, out := &in.CheckRegions, &out.CheckRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConsecutiveFails != nil {
		in, out := &in.ConsecutiveFails, &out.ConsecutiveFails
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveSuccesses != nil {
		in, out := &in.ConsecutiveSuccesses, &out.ConsecutiveSuccesses
		*out = new(float64)
		**out = **in
	}
	if in.CreatedOn != nil {
		in, out := &in.CreatedOn, &out.CreatedOn
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpectedBody != nil {
		in, out := &in.ExpectedBody, &out.ExpectedBody
		*out = new(string)
		**out = **in
	}
	if in.ExpectedCodes != nil {
		in, out := &in.ExpectedCodes, &out.ExpectedCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.ModifiedOn != nil {
		in, out := &in.ModifiedOn, &out.ModifiedOn
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.Suspended != nil {
		in, out := &in.Suspended, &out.Suspended
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthcheckObservation.
func (in *HealthcheckObservation) DeepCopy() *HealthcheckObservation {
	if in == nil {
		return nil
	}
	out := new(HealthcheckObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthcheckParameters) DeepCopyInto(out *HealthcheckParameters) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AllowInsecure != nil {
		in, out := &in.AllowInsecure, &out.AllowInsecure
		*out = new(bool)
		**out = **in
	}
	if in.CheckRegions != nil {
		in, out := &in.CheckRegions, &out.CheckRegions
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConsecutiveFails != nil {
		in, out := &in.ConsecutiveFails, &out.ConsecutiveFails
		*out = new(float64)
		**out = **in
	}
	if in.ConsecutiveSuccesses != nil {
		in, out := &in.ConsecutiveSuccesses, &out.ConsecutiveSuccesses
		*out = new(float64)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ExpectedBody != nil {
		in, out := &in.ExpectedBody, &out.ExpectedBody
		*out = new(string)
		**out = **in
	}
	if in.ExpectedCodes != nil {
		in, out := &in.ExpectedCodes, &out.ExpectedCodes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.FollowRedirects != nil {
		in, out := &in.FollowRedirects, &out.FollowRedirects
		*out = new(bool)
		**out = **in
	}
	if in.Header != nil {
		in, out := &in.Header, &out.Header
		*out = make([]HeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Interval != nil {
		in, out := &in.Interval, &out.Interval
		*out = new(float64)
		**out = **in
	}
	if in.Method != nil {
		in, out := &in.Method, &out.Method
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Path != nil {
		in, out := &in.Path, &out.Path
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Retries != nil {
		in, out := &in.Retries, &out.Retries
		*out = new(float64)
		**out = **in
	}
	if in.Suspended != nil {
		in, out := &in.Suspended, &out.Suspended
		*out = new(bool)
		**out = **in
	}
	if in.Timeout != nil {
		in, out := &in.Timeout, &out.Timeout
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthcheckParameters.
func (in *HealthcheckParameters) DeepCopy() *HealthcheckParameters {
	if in == nil {
		return nil
	}
	out := new(HealthcheckParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthcheckSpec) DeepCopyInto(out *HealthcheckSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthcheckSpec.
func (in *HealthcheckSpec) DeepCopy() *HealthcheckSpec {
	if in == nil {
		return nil
	}
	out := new(HealthcheckSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthcheckStatus) DeepCopyInto(out *HealthcheckStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthcheckStatus.
func (in *HealthcheckStatus) DeepCopy() *HealthcheckStatus {
	if in == nil {
		return nil
	}
	out := new(HealthcheckStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Hold) DeepCopyInto(out *Hold) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Hold.
func (in *Hold) DeepCopy() *Hold {
	if in == nil {
		return nil
	}
	out := new(Hold)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Hold) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HoldInitParameters) DeepCopyInto(out *HoldInitParameters) {
	*out = *in
	if in.Hold != nil {
		in, out := &in.Hold, &out.Hold
		*out = new(bool)
		**out = **in
	}
	if in.HoldAfter != nil {
		in, out := &in.HoldAfter, &out.HoldAfter
		*out = new(string)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HoldInitParameters.
func (in *HoldInitParameters) DeepCopy() *HoldInitParameters {
	if in == nil {
		return nil
	}
	out := new(HoldInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HoldList) DeepCopyInto(out *HoldList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Hold, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HoldList.
func (in *HoldList) DeepCopy() *HoldList {
	if in == nil {
		return nil
	}
	out := new(HoldList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HoldList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HoldObservation) DeepCopyInto(out *HoldObservation) {
	*out = *in
	if in.Hold != nil {
		in, out := &in.Hold, &out.Hold
		*out = new(bool)
		**out = **in
	}
	if in.HoldAfter != nil {
		in, out := &in.HoldAfter, &out.HoldAfter
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HoldObservation.
func (in *HoldObservation) DeepCopy() *HoldObservation {
	if in == nil {
		return nil
	}
	out := new(HoldObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HoldParameters) DeepCopyInto(out *HoldParameters) {
	*out = *in
	if in.Hold != nil {
		in, out := &in.Hold, &out.Hold
		*out = new(bool)
		**out = **in
	}
	if in.HoldAfter != nil {
		in, out := &in.HoldAfter, &out.HoldAfter
		*out = new(string)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HoldParameters.
func (in *HoldParameters) DeepCopy() *HoldParameters {
	if in == nil {
		return nil
	}
	out := new(HoldParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HoldSpec) DeepCopyInto(out *HoldSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HoldSpec.
func (in *HoldSpec) DeepCopy() *HoldSpec {
	if in == nil {
		return nil
	}
	out := new(HoldSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HoldStatus) DeepCopyInto(out *HoldStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HoldStatus.
func (in *HoldStatus) DeepCopy() *HoldStatus {
	if in == nil {
		return nil
	}
	out := new(HoldStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialSettingsInitParameters) DeepCopyInto(out *InitialSettingsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialSettingsInitParameters.
func (in *InitialSettingsInitParameters) DeepCopy() *InitialSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(InitialSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialSettingsObservation) DeepCopyInto(out *InitialSettingsObservation) {
	*out = *in
	if in.AlwaysOnline != nil {
		in, out := &in.AlwaysOnline, &out.AlwaysOnline
		*out = new(string)
		**out = **in
	}
	if in.AlwaysUseHTTPS != nil {
		in, out := &in.AlwaysUseHTTPS, &out.AlwaysUseHTTPS
		*out = new(string)
		**out = **in
	}
	if in.AutomaticHTTPSRewrites != nil {
		in, out := &in.AutomaticHTTPSRewrites, &out.AutomaticHTTPSRewrites
		*out = new(string)
		**out = **in
	}
	if in.BinaryAst != nil {
		in, out := &in.BinaryAst, &out.BinaryAst
		*out = new(string)
		**out = **in
	}
	if in.Brotli != nil {
		in, out := &in.Brotli, &out.Brotli
		*out = new(string)
		**out = **in
	}
	if in.BrowserCacheTTL != nil {
		in, out := &in.BrowserCacheTTL, &out.BrowserCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.BrowserCheck != nil {
		in, out := &in.BrowserCheck, &out.BrowserCheck
		*out = new(string)
		**out = **in
	}
	if in.CacheLevel != nil {
		in, out := &in.CacheLevel, &out.CacheLevel
		*out = new(string)
		**out = **in
	}
	if in.ChallengeTTL != nil {
		in, out := &in.ChallengeTTL, &out.ChallengeTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CnameFlattening != nil {
		in, out := &in.CnameFlattening, &out.CnameFlattening
		*out = new(string)
		**out = **in
	}
	if in.DevelopmentMode != nil {
		in, out := &in.DevelopmentMode, &out.DevelopmentMode
		*out = new(string)
		**out = **in
	}
	if in.EarlyHints != nil {
		in, out := &in.EarlyHints, &out.EarlyHints
		*out = new(string)
		**out = **in
	}
	if in.EmailObfuscation != nil {
		in, out := &in.EmailObfuscation, &out.EmailObfuscation
		*out = new(string)
		**out = **in
	}
	if in.FilterLogsToCloudflare != nil {
		in, out := &in.FilterLogsToCloudflare, &out.FilterLogsToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.Fonts != nil {
		in, out := &in.Fonts, &out.Fonts
		*out = new(string)
		**out = **in
	}
	if in.H2Prioritization != nil {
		in, out := &in.H2Prioritization, &out.H2Prioritization
		*out = new(string)
		**out = **in
	}
	if in.HotlinkProtection != nil {
		in, out := &in.HotlinkProtection, &out.HotlinkProtection
		*out = new(string)
		**out = **in
	}
	if in.Http2 != nil {
		in, out := &in.Http2, &out.Http2
		*out = new(string)
		**out = **in
	}
	if in.Http3 != nil {
		in, out := &in.Http3, &out.Http3
		*out = new(string)
		**out = **in
	}
	if in.IPGeolocation != nil {
		in, out := &in.IPGeolocation, &out.IPGeolocation
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.ImageResizing != nil {
		in, out := &in.ImageResizing, &out.ImageResizing
		*out = new(string)
		**out = **in
	}
	if in.LogToCloudflare != nil {
		in, out := &in.LogToCloudflare, &out.LogToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.MaxUpload != nil {
		in, out := &in.MaxUpload, &out.MaxUpload
		*out = new(float64)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Minify != nil {
		in, out := &in.Minify, &out.Minify
		*out = make([]MinifyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mirage != nil {
		in, out := &in.Mirage, &out.Mirage
		*out = new(string)
		**out = **in
	}
	if in.MobileRedirect != nil {
		in, out := &in.MobileRedirect, &out.MobileRedirect
		*out = make([]MobileRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpportunisticEncryption != nil {
		in, out := &in.OpportunisticEncryption, &out.OpportunisticEncryption
		*out = new(string)
		**out = **in
	}
	if in.OpportunisticOnion != nil {
		in, out := &in.OpportunisticOnion, &out.OpportunisticOnion
		*out = new(string)
		**out = **in
	}
	if in.OrangeToOrange != nil {
		in, out := &in.OrangeToOrange, &out.OrangeToOrange
		*out = new(string)
		**out = **in
	}
	if in.OriginErrorPagePassThru != nil {
		in, out := &in.OriginErrorPagePassThru, &out.OriginErrorPagePassThru
		*out = new(string)
		**out = **in
	}
	if in.OriginMaxHTTPVersion != nil {
		in, out := &in.OriginMaxHTTPVersion, &out.OriginMaxHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.Polish != nil {
		in, out := &in.Polish, &out.Polish
		*out = new(string)
		**out = **in
	}
	if in.PrefetchPreload != nil {
		in, out := &in.PrefetchPreload, &out.PrefetchPreload
		*out = new(string)
		**out = **in
	}
	if in.PrivacyPass != nil {
		in, out := &in.PrivacyPass, &out.PrivacyPass
		*out = new(string)
		**out = **in
	}
	if in.ProxyReadTimeout != nil {
		in, out := &in.ProxyReadTimeout, &out.ProxyReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.PseudoIPv4 != nil {
		in, out := &in.PseudoIPv4, &out.PseudoIPv4
		*out = new(string)
		**out = **in
	}
	if in.ResponseBuffering != nil {
		in, out := &in.ResponseBuffering, &out.ResponseBuffering
		*out = new(string)
		**out = **in
	}
	if in.RocketLoader != nil {
		in, out := &in.RocketLoader, &out.RocketLoader
		*out = new(string)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(string)
		**out = **in
	}
	if in.SecurityHeader != nil {
		in, out := &in.SecurityHeader, &out.SecurityHeader
		*out = make([]SecurityHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.ServerSideExclude != nil {
		in, out := &in.ServerSideExclude, &out.ServerSideExclude
		*out = new(string)
		**out = **in
	}
	if in.SortQueryStringForCache != nil {
		in, out := &in.SortQueryStringForCache, &out.SortQueryStringForCache
		*out = new(string)
		**out = **in
	}
	if in.TLS12Only != nil {
		in, out := &in.TLS12Only, &out.TLS12Only
		*out = new(string)
		**out = **in
	}
	if in.TLS13 != nil {
		in, out := &in.TLS13, &out.TLS13
		*out = new(string)
		**out = **in
	}
	if in.TLSClientAuth != nil {
		in, out := &in.TLSClientAuth, &out.TLSClientAuth
		*out = new(string)
		**out = **in
	}
	if in.TrueClientIPHeader != nil {
		in, out := &in.TrueClientIPHeader, &out.TrueClientIPHeader
		*out = new(string)
		**out = **in
	}
	if in.UniversalSSL != nil {
		in, out := &in.UniversalSSL, &out.UniversalSSL
		*out = new(string)
		**out = **in
	}
	if in.VisitorIP != nil {
		in, out := &in.VisitorIP, &out.VisitorIP
		*out = new(string)
		**out = **in
	}
	if in.Waf != nil {
		in, out := &in.Waf, &out.Waf
		*out = new(string)
		**out = **in
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = new(string)
		**out = **in
	}
	if in.Websockets != nil {
		in, out := &in.Websockets, &out.Websockets
		*out = new(string)
		**out = **in
	}
	if in.ZeroRtt != nil {
		in, out := &in.ZeroRtt, &out.ZeroRtt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialSettingsObservation.
func (in *InitialSettingsObservation) DeepCopy() *InitialSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(InitialSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *InitialSettingsParameters) DeepCopyInto(out *InitialSettingsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new InitialSettingsParameters.
func (in *InitialSettingsParameters) DeepCopy() *InitialSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(InitialSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificate) DeepCopyInto(out *KeylessCertificate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificate.
func (in *KeylessCertificate) DeepCopy() *KeylessCertificate {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeylessCertificate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificateInitParameters) DeepCopyInto(out *KeylessCertificateInitParameters) {
	*out = *in
	if in.BundleMethod != nil {
		in, out := &in.BundleMethod, &out.BundleMethod
		*out = new(string)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificateInitParameters.
func (in *KeylessCertificateInitParameters) DeepCopy() *KeylessCertificateInitParameters {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificateList) DeepCopyInto(out *KeylessCertificateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KeylessCertificate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificateList.
func (in *KeylessCertificateList) DeepCopy() *KeylessCertificateList {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *KeylessCertificateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificateObservation) DeepCopyInto(out *KeylessCertificateObservation) {
	*out = *in
	if in.BundleMethod != nil {
		in, out := &in.BundleMethod, &out.BundleMethod
		*out = new(string)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificateObservation.
func (in *KeylessCertificateObservation) DeepCopy() *KeylessCertificateObservation {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificateParameters) DeepCopyInto(out *KeylessCertificateParameters) {
	*out = *in
	if in.BundleMethod != nil {
		in, out := &in.BundleMethod, &out.BundleMethod
		*out = new(string)
		**out = **in
	}
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.Host != nil {
		in, out := &in.Host, &out.Host
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificateParameters.
func (in *KeylessCertificateParameters) DeepCopy() *KeylessCertificateParameters {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificateSpec) DeepCopyInto(out *KeylessCertificateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificateSpec.
func (in *KeylessCertificateSpec) DeepCopy() *KeylessCertificateSpec {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *KeylessCertificateStatus) DeepCopyInto(out *KeylessCertificateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new KeylessCertificateStatus.
func (in *KeylessCertificateStatus) DeepCopy() *KeylessCertificateStatus {
	if in == nil {
		return nil
	}
	out := new(KeylessCertificateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Lockdown) DeepCopyInto(out *Lockdown) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Lockdown.
func (in *Lockdown) DeepCopy() *Lockdown {
	if in == nil {
		return nil
	}
	out := new(Lockdown)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Lockdown) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockdownInitParameters) DeepCopyInto(out *LockdownInitParameters) {
	*out = *in
	if in.Configurations != nil {
		in, out := &in.Configurations, &out.Configurations
		*out = make([]ConfigurationsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Urls != nil {
		in, out := &in.Urls, &out.Urls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockdownInitParameters.
func (in *LockdownInitParameters) DeepCopy() *LockdownInitParameters {
	if in == nil {
		return nil
	}
	out := new(LockdownInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockdownList) DeepCopyInto(out *LockdownList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Lockdown, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockdownList.
func (in *LockdownList) DeepCopy() *LockdownList {
	if in == nil {
		return nil
	}
	out := new(LockdownList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LockdownList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockdownObservation) DeepCopyInto(out *LockdownObservation) {
	*out = *in
	if in.Configurations != nil {
		in, out := &in.Configurations, &out.Configurations
		*out = make([]ConfigurationsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Urls != nil {
		in, out := &in.Urls, &out.Urls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockdownObservation.
func (in *LockdownObservation) DeepCopy() *LockdownObservation {
	if in == nil {
		return nil
	}
	out := new(LockdownObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockdownParameters) DeepCopyInto(out *LockdownParameters) {
	*out = *in
	if in.Configurations != nil {
		in, out := &in.Configurations, &out.Configurations
		*out = make([]ConfigurationsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Priority != nil {
		in, out := &in.Priority, &out.Priority
		*out = new(float64)
		**out = **in
	}
	if in.Urls != nil {
		in, out := &in.Urls, &out.Urls
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockdownParameters.
func (in *LockdownParameters) DeepCopy() *LockdownParameters {
	if in == nil {
		return nil
	}
	out := new(LockdownParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockdownSpec) DeepCopyInto(out *LockdownSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockdownSpec.
func (in *LockdownSpec) DeepCopy() *LockdownSpec {
	if in == nil {
		return nil
	}
	out := new(LockdownSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockdownStatus) DeepCopyInto(out *LockdownStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockdownStatus.
func (in *LockdownStatus) DeepCopy() *LockdownStatus {
	if in == nil {
		return nil
	}
	out := new(LockdownStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetention) DeepCopyInto(out *LogpullRetention) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetention.
func (in *LogpullRetention) DeepCopy() *LogpullRetention {
	if in == nil {
		return nil
	}
	out := new(LogpullRetention)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogpullRetention) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetentionInitParameters) DeepCopyInto(out *LogpullRetentionInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetentionInitParameters.
func (in *LogpullRetentionInitParameters) DeepCopy() *LogpullRetentionInitParameters {
	if in == nil {
		return nil
	}
	out := new(LogpullRetentionInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetentionList) DeepCopyInto(out *LogpullRetentionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LogpullRetention, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetentionList.
func (in *LogpullRetentionList) DeepCopy() *LogpullRetentionList {
	if in == nil {
		return nil
	}
	out := new(LogpullRetentionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LogpullRetentionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetentionObservation) DeepCopyInto(out *LogpullRetentionObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetentionObservation.
func (in *LogpullRetentionObservation) DeepCopy() *LogpullRetentionObservation {
	if in == nil {
		return nil
	}
	out := new(LogpullRetentionObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetentionParameters) DeepCopyInto(out *LogpullRetentionParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetentionParameters.
func (in *LogpullRetentionParameters) DeepCopy() *LogpullRetentionParameters {
	if in == nil {
		return nil
	}
	out := new(LogpullRetentionParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetentionSpec) DeepCopyInto(out *LogpullRetentionSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetentionSpec.
func (in *LogpullRetentionSpec) DeepCopy() *LogpullRetentionSpec {
	if in == nil {
		return nil
	}
	out := new(LogpullRetentionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LogpullRetentionStatus) DeepCopyInto(out *LogpullRetentionStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LogpullRetentionStatus.
func (in *LogpullRetentionStatus) DeepCopy() *LogpullRetentionStatus {
	if in == nil {
		return nil
	}
	out := new(LogpullRetentionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeaders) DeepCopyInto(out *ManagedHeaders) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeaders.
func (in *ManagedHeaders) DeepCopy() *ManagedHeaders {
	if in == nil {
		return nil
	}
	out := new(ManagedHeaders)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedHeaders) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeadersInitParameters) DeepCopyInto(out *ManagedHeadersInitParameters) {
	*out = *in
	if in.ManagedRequestHeaders != nil {
		in, out := &in.ManagedRequestHeaders, &out.ManagedRequestHeaders
		*out = make([]ManagedRequestHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedResponseHeaders != nil {
		in, out := &in.ManagedResponseHeaders, &out.ManagedResponseHeaders
		*out = make([]ManagedResponseHeadersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeadersInitParameters.
func (in *ManagedHeadersInitParameters) DeepCopy() *ManagedHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeadersList) DeepCopyInto(out *ManagedHeadersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ManagedHeaders, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeadersList.
func (in *ManagedHeadersList) DeepCopy() *ManagedHeadersList {
	if in == nil {
		return nil
	}
	out := new(ManagedHeadersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ManagedHeadersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeadersObservation) DeepCopyInto(out *ManagedHeadersObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ManagedRequestHeaders != nil {
		in, out := &in.ManagedRequestHeaders, &out.ManagedRequestHeaders
		*out = make([]ManagedRequestHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedResponseHeaders != nil {
		in, out := &in.ManagedResponseHeaders, &out.ManagedResponseHeaders
		*out = make([]ManagedResponseHeadersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeadersObservation.
func (in *ManagedHeadersObservation) DeepCopy() *ManagedHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeadersParameters) DeepCopyInto(out *ManagedHeadersParameters) {
	*out = *in
	if in.ManagedRequestHeaders != nil {
		in, out := &in.ManagedRequestHeaders, &out.ManagedRequestHeaders
		*out = make([]ManagedRequestHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ManagedResponseHeaders != nil {
		in, out := &in.ManagedResponseHeaders, &out.ManagedResponseHeaders
		*out = make([]ManagedResponseHeadersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeadersParameters.
func (in *ManagedHeadersParameters) DeepCopy() *ManagedHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeadersSpec) DeepCopyInto(out *ManagedHeadersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeadersSpec.
func (in *ManagedHeadersSpec) DeepCopy() *ManagedHeadersSpec {
	if in == nil {
		return nil
	}
	out := new(ManagedHeadersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedHeadersStatus) DeepCopyInto(out *ManagedHeadersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedHeadersStatus.
func (in *ManagedHeadersStatus) DeepCopy() *ManagedHeadersStatus {
	if in == nil {
		return nil
	}
	out := new(ManagedHeadersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRequestHeadersInitParameters) DeepCopyInto(out *ManagedRequestHeadersInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRequestHeadersInitParameters.
func (in *ManagedRequestHeadersInitParameters) DeepCopy() *ManagedRequestHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedRequestHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRequestHeadersObservation) DeepCopyInto(out *ManagedRequestHeadersObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRequestHeadersObservation.
func (in *ManagedRequestHeadersObservation) DeepCopy() *ManagedRequestHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedRequestHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedRequestHeadersParameters) DeepCopyInto(out *ManagedRequestHeadersParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedRequestHeadersParameters.
func (in *ManagedRequestHeadersParameters) DeepCopy() *ManagedRequestHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedRequestHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedResponseHeadersInitParameters) DeepCopyInto(out *ManagedResponseHeadersInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedResponseHeadersInitParameters.
func (in *ManagedResponseHeadersInitParameters) DeepCopy() *ManagedResponseHeadersInitParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedResponseHeadersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedResponseHeadersObservation) DeepCopyInto(out *ManagedResponseHeadersObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedResponseHeadersObservation.
func (in *ManagedResponseHeadersObservation) DeepCopy() *ManagedResponseHeadersObservation {
	if in == nil {
		return nil
	}
	out := new(ManagedResponseHeadersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ManagedResponseHeadersParameters) DeepCopyInto(out *ManagedResponseHeadersParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ManagedResponseHeadersParameters.
func (in *ManagedResponseHeadersParameters) DeepCopy() *ManagedResponseHeadersParameters {
	if in == nil {
		return nil
	}
	out := new(ManagedResponseHeadersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchInitParameters) DeepCopyInto(out *MatchInitParameters) {
	*out = *in
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = make([]RequestInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = make([]MatchResponseInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchInitParameters.
func (in *MatchInitParameters) DeepCopy() *MatchInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchObservation) DeepCopyInto(out *MatchObservation) {
	*out = *in
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = make([]RequestObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = make([]MatchResponseObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchObservation.
func (in *MatchObservation) DeepCopy() *MatchObservation {
	if in == nil {
		return nil
	}
	out := new(MatchObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchParameters) DeepCopyInto(out *MatchParameters) {
	*out = *in
	if in.Request != nil {
		in, out := &in.Request, &out.Request
		*out = make([]RequestParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Response != nil {
		in, out := &in.Response, &out.Response
		*out = make([]MatchResponseParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchParameters.
func (in *MatchParameters) DeepCopy() *MatchParameters {
	if in == nil {
		return nil
	}
	out := new(MatchParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchResponseInitParameters) DeepCopyInto(out *MatchResponseInitParameters) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.OriginTraffic != nil {
		in, out := &in.OriginTraffic, &out.OriginTraffic
		*out = new(bool)
		**out = **in
	}
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchResponseInitParameters.
func (in *MatchResponseInitParameters) DeepCopy() *MatchResponseInitParameters {
	if in == nil {
		return nil
	}
	out := new(MatchResponseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchResponseObservation) DeepCopyInto(out *MatchResponseObservation) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.OriginTraffic != nil {
		in, out := &in.OriginTraffic, &out.OriginTraffic
		*out = new(bool)
		**out = **in
	}
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchResponseObservation.
func (in *MatchResponseObservation) DeepCopy() *MatchResponseObservation {
	if in == nil {
		return nil
	}
	out := new(MatchResponseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MatchResponseParameters) DeepCopyInto(out *MatchResponseParameters) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]map[string]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = make(map[string]*string, len(*in))
				for key, val := range *in {
					var outVal *string
					if val == nil {
						(*out)[key] = nil
					} else {
						in, out := &val, &outVal
						*out = new(string)
						**out = **in
					}
					(*out)[key] = outVal
				}
			}
		}
	}
	if in.OriginTraffic != nil {
		in, out := &in.OriginTraffic, &out.OriginTraffic
		*out = new(bool)
		**out = **in
	}
	if in.Statuses != nil {
		in, out := &in.Statuses, &out.Statuses
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MatchResponseParameters.
func (in *MatchResponseParameters) DeepCopy() *MatchResponseParameters {
	if in == nil {
		return nil
	}
	out := new(MatchResponseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MinifyInitParameters) DeepCopyInto(out *MinifyInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MinifyInitParameters.
func (in *MinifyInitParameters) DeepCopy() *MinifyInitParameters {
	if in == nil {
		return nil
	}
	out := new(MinifyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MinifyObservation) DeepCopyInto(out *MinifyObservation) {
	*out = *in
	if in.CSS != nil {
		in, out := &in.CSS, &out.CSS
		*out = new(string)
		**out = **in
	}
	if in.HTML != nil {
		in, out := &in.HTML, &out.HTML
		*out = new(string)
		**out = **in
	}
	if in.Js != nil {
		in, out := &in.Js, &out.Js
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MinifyObservation.
func (in *MinifyObservation) DeepCopy() *MinifyObservation {
	if in == nil {
		return nil
	}
	out := new(MinifyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MinifyParameters) DeepCopyInto(out *MinifyParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MinifyParameters.
func (in *MinifyParameters) DeepCopy() *MinifyParameters {
	if in == nil {
		return nil
	}
	out := new(MinifyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileRedirectInitParameters) DeepCopyInto(out *MobileRedirectInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileRedirectInitParameters.
func (in *MobileRedirectInitParameters) DeepCopy() *MobileRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(MobileRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileRedirectObservation) DeepCopyInto(out *MobileRedirectObservation) {
	*out = *in
	if in.MobileSubdomain != nil {
		in, out := &in.MobileSubdomain, &out.MobileSubdomain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StripURI != nil {
		in, out := &in.StripURI, &out.StripURI
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileRedirectObservation.
func (in *MobileRedirectObservation) DeepCopy() *MobileRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(MobileRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *MobileRedirectParameters) DeepCopyInto(out *MobileRedirectParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new MobileRedirectParameters.
func (in *MobileRedirectParameters) DeepCopy() *MobileRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(MobileRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTest) DeepCopyInto(out *ObservatoryScheduledTest) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTest.
func (in *ObservatoryScheduledTest) DeepCopy() *ObservatoryScheduledTest {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTest)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ObservatoryScheduledTest) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTestInitParameters) DeepCopyInto(out *ObservatoryScheduledTestInitParameters) {
	*out = *in
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTestInitParameters.
func (in *ObservatoryScheduledTestInitParameters) DeepCopy() *ObservatoryScheduledTestInitParameters {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTestList) DeepCopyInto(out *ObservatoryScheduledTestList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ObservatoryScheduledTest, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTestList.
func (in *ObservatoryScheduledTestList) DeepCopy() *ObservatoryScheduledTestList {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTestList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ObservatoryScheduledTestList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTestObservation) DeepCopyInto(out *ObservatoryScheduledTestObservation) {
	*out = *in
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTestObservation.
func (in *ObservatoryScheduledTestObservation) DeepCopy() *ObservatoryScheduledTestObservation {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTestParameters) DeepCopyInto(out *ObservatoryScheduledTestParameters) {
	*out = *in
	if in.Frequency != nil {
		in, out := &in.Frequency, &out.Frequency
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.URL != nil {
		in, out := &in.URL, &out.URL
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTestParameters.
func (in *ObservatoryScheduledTestParameters) DeepCopy() *ObservatoryScheduledTestParameters {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTestSpec) DeepCopyInto(out *ObservatoryScheduledTestSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTestSpec.
func (in *ObservatoryScheduledTestSpec) DeepCopy() *ObservatoryScheduledTestSpec {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTestSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ObservatoryScheduledTestStatus) DeepCopyInto(out *ObservatoryScheduledTestStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ObservatoryScheduledTestStatus.
func (in *ObservatoryScheduledTestStatus) DeepCopy() *ObservatoryScheduledTestStatus {
	if in == nil {
		return nil
	}
	out := new(ObservatoryScheduledTestStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimit) DeepCopyInto(out *RateLimit) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimit.
func (in *RateLimit) DeepCopy() *RateLimit {
	if in == nil {
		return nil
	}
	out := new(RateLimit)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RateLimit) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitInitParameters) DeepCopyInto(out *RateLimitInitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BypassURLPatterns != nil {
		in, out := &in.BypassURLPatterns, &out.BypassURLPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Correlate != nil {
		in, out := &in.Correlate, &out.Correlate
		*out = make([]CorrelateInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]MatchInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitInitParameters.
func (in *RateLimitInitParameters) DeepCopy() *RateLimitInitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitList) DeepCopyInto(out *RateLimitList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RateLimit, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitList.
func (in *RateLimitList) DeepCopy() *RateLimitList {
	if in == nil {
		return nil
	}
	out := new(RateLimitList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RateLimitList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitObservation) DeepCopyInto(out *RateLimitObservation) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BypassURLPatterns != nil {
		in, out := &in.BypassURLPatterns, &out.BypassURLPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Correlate != nil {
		in, out := &in.Correlate, &out.Correlate
		*out = make([]CorrelateObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]MatchObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitObservation.
func (in *RateLimitObservation) DeepCopy() *RateLimitObservation {
	if in == nil {
		return nil
	}
	out := new(RateLimitObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitParameters) DeepCopyInto(out *RateLimitParameters) {
	*out = *in
	if in.Action != nil {
		in, out := &in.Action, &out.Action
		*out = make([]ActionParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.BypassURLPatterns != nil {
		in, out := &in.BypassURLPatterns, &out.BypassURLPatterns
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Correlate != nil {
		in, out := &in.Correlate, &out.Correlate
		*out = make([]CorrelateParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Disabled != nil {
		in, out := &in.Disabled, &out.Disabled
		*out = new(bool)
		**out = **in
	}
	if in.Match != nil {
		in, out := &in.Match, &out.Match
		*out = make([]MatchParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.Threshold != nil {
		in, out := &in.Threshold, &out.Threshold
		*out = new(float64)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitParameters.
func (in *RateLimitParameters) DeepCopy() *RateLimitParameters {
	if in == nil {
		return nil
	}
	out := new(RateLimitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitSpec) DeepCopyInto(out *RateLimitSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitSpec.
func (in *RateLimitSpec) DeepCopy() *RateLimitSpec {
	if in == nil {
		return nil
	}
	out := new(RateLimitSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RateLimitStatus) DeepCopyInto(out *RateLimitStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RateLimitStatus.
func (in *RateLimitStatus) DeepCopy() *RateLimitStatus {
	if in == nil {
		return nil
	}
	out := new(RateLimitStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCache) DeepCopyInto(out *RegionalTieredCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCache.
func (in *RegionalTieredCache) DeepCopy() *RegionalTieredCache {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionalTieredCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCacheInitParameters) DeepCopyInto(out *RegionalTieredCacheInitParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCacheInitParameters.
func (in *RegionalTieredCacheInitParameters) DeepCopy() *RegionalTieredCacheInitParameters {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCacheInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCacheList) DeepCopyInto(out *RegionalTieredCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RegionalTieredCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCacheList.
func (in *RegionalTieredCacheList) DeepCopy() *RegionalTieredCacheList {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RegionalTieredCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCacheObservation) DeepCopyInto(out *RegionalTieredCacheObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCacheObservation.
func (in *RegionalTieredCacheObservation) DeepCopy() *RegionalTieredCacheObservation {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCacheParameters) DeepCopyInto(out *RegionalTieredCacheParameters) {
	*out = *in
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCacheParameters.
func (in *RegionalTieredCacheParameters) DeepCopy() *RegionalTieredCacheParameters {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCacheSpec) DeepCopyInto(out *RegionalTieredCacheSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCacheSpec.
func (in *RegionalTieredCacheSpec) DeepCopy() *RegionalTieredCacheSpec {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RegionalTieredCacheStatus) DeepCopyInto(out *RegionalTieredCacheStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RegionalTieredCacheStatus.
func (in *RegionalTieredCacheStatus) DeepCopy() *RegionalTieredCacheStatus {
	if in == nil {
		return nil
	}
	out := new(RegionalTieredCacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestInitParameters) DeepCopyInto(out *RequestInitParameters) {
	*out = *in
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Schemes != nil {
		in, out := &in.Schemes, &out.Schemes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URLPattern != nil {
		in, out := &in.URLPattern, &out.URLPattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestInitParameters.
func (in *RequestInitParameters) DeepCopy() *RequestInitParameters {
	if in == nil {
		return nil
	}
	out := new(RequestInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestObservation) DeepCopyInto(out *RequestObservation) {
	*out = *in
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Schemes != nil {
		in, out := &in.Schemes, &out.Schemes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URLPattern != nil {
		in, out := &in.URLPattern, &out.URLPattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestObservation.
func (in *RequestObservation) DeepCopy() *RequestObservation {
	if in == nil {
		return nil
	}
	out := new(RequestObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RequestParameters) DeepCopyInto(out *RequestParameters) {
	*out = *in
	if in.Methods != nil {
		in, out := &in.Methods, &out.Methods
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Schemes != nil {
		in, out := &in.Schemes, &out.Schemes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.URLPattern != nil {
		in, out := &in.URLPattern, &out.URLPattern
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RequestParameters.
func (in *RequestParameters) DeepCopy() *RequestParameters {
	if in == nil {
		return nil
	}
	out := new(RequestParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseInitParameters) DeepCopyInto(out *ResponseInitParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseInitParameters.
func (in *ResponseInitParameters) DeepCopy() *ResponseInitParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseObservation) DeepCopyInto(out *ResponseObservation) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseObservation.
func (in *ResponseObservation) DeepCopy() *ResponseObservation {
	if in == nil {
		return nil
	}
	out := new(ResponseObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ResponseParameters) DeepCopyInto(out *ResponseParameters) {
	*out = *in
	if in.Body != nil {
		in, out := &in.Body, &out.Body
		*out = new(string)
		**out = **in
	}
	if in.ContentType != nil {
		in, out := &in.ContentType, &out.ContentType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ResponseParameters.
func (in *ResponseParameters) DeepCopy() *ResponseParameters {
	if in == nil {
		return nil
	}
	out := new(ResponseParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityHeaderInitParameters) DeepCopyInto(out *SecurityHeaderInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityHeaderInitParameters.
func (in *SecurityHeaderInitParameters) DeepCopy() *SecurityHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityHeaderObservation) DeepCopyInto(out *SecurityHeaderObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.Nosniff != nil {
		in, out := &in.Nosniff, &out.Nosniff
		*out = new(bool)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityHeaderObservation.
func (in *SecurityHeaderObservation) DeepCopy() *SecurityHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(SecurityHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SecurityHeaderParameters) DeepCopyInto(out *SecurityHeaderParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SecurityHeaderParameters.
func (in *SecurityHeaderParameters) DeepCopy() *SecurityHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(SecurityHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsInitParameters) DeepCopyInto(out *SettingsInitParameters) {
	*out = *in
	if in.AlwaysOnline != nil {
		in, out := &in.AlwaysOnline, &out.AlwaysOnline
		*out = new(string)
		**out = **in
	}
	if in.AlwaysUseHTTPS != nil {
		in, out := &in.AlwaysUseHTTPS, &out.AlwaysUseHTTPS
		*out = new(string)
		**out = **in
	}
	if in.AutomaticHTTPSRewrites != nil {
		in, out := &in.AutomaticHTTPSRewrites, &out.AutomaticHTTPSRewrites
		*out = new(string)
		**out = **in
	}
	if in.BinaryAst != nil {
		in, out := &in.BinaryAst, &out.BinaryAst
		*out = new(string)
		**out = **in
	}
	if in.Brotli != nil {
		in, out := &in.Brotli, &out.Brotli
		*out = new(string)
		**out = **in
	}
	if in.BrowserCacheTTL != nil {
		in, out := &in.BrowserCacheTTL, &out.BrowserCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.BrowserCheck != nil {
		in, out := &in.BrowserCheck, &out.BrowserCheck
		*out = new(string)
		**out = **in
	}
	if in.CacheLevel != nil {
		in, out := &in.CacheLevel, &out.CacheLevel
		*out = new(string)
		**out = **in
	}
	if in.ChallengeTTL != nil {
		in, out := &in.ChallengeTTL, &out.ChallengeTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CnameFlattening != nil {
		in, out := &in.CnameFlattening, &out.CnameFlattening
		*out = new(string)
		**out = **in
	}
	if in.DevelopmentMode != nil {
		in, out := &in.DevelopmentMode, &out.DevelopmentMode
		*out = new(string)
		**out = **in
	}
	if in.EarlyHints != nil {
		in, out := &in.EarlyHints, &out.EarlyHints
		*out = new(string)
		**out = **in
	}
	if in.EmailObfuscation != nil {
		in, out := &in.EmailObfuscation, &out.EmailObfuscation
		*out = new(string)
		**out = **in
	}
	if in.FilterLogsToCloudflare != nil {
		in, out := &in.FilterLogsToCloudflare, &out.FilterLogsToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.Fonts != nil {
		in, out := &in.Fonts, &out.Fonts
		*out = new(string)
		**out = **in
	}
	if in.H2Prioritization != nil {
		in, out := &in.H2Prioritization, &out.H2Prioritization
		*out = new(string)
		**out = **in
	}
	if in.HotlinkProtection != nil {
		in, out := &in.HotlinkProtection, &out.HotlinkProtection
		*out = new(string)
		**out = **in
	}
	if in.Http2 != nil {
		in, out := &in.Http2, &out.Http2
		*out = new(string)
		**out = **in
	}
	if in.Http3 != nil {
		in, out := &in.Http3, &out.Http3
		*out = new(string)
		**out = **in
	}
	if in.IPGeolocation != nil {
		in, out := &in.IPGeolocation, &out.IPGeolocation
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.ImageResizing != nil {
		in, out := &in.ImageResizing, &out.ImageResizing
		*out = new(string)
		**out = **in
	}
	if in.LogToCloudflare != nil {
		in, out := &in.LogToCloudflare, &out.LogToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.MaxUpload != nil {
		in, out := &in.MaxUpload, &out.MaxUpload
		*out = new(float64)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Minify != nil {
		in, out := &in.Minify, &out.Minify
		*out = make([]SettingsMinifyInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mirage != nil {
		in, out := &in.Mirage, &out.Mirage
		*out = new(string)
		**out = **in
	}
	if in.MobileRedirect != nil {
		in, out := &in.MobileRedirect, &out.MobileRedirect
		*out = make([]SettingsMobileRedirectInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpportunisticEncryption != nil {
		in, out := &in.OpportunisticEncryption, &out.OpportunisticEncryption
		*out = new(string)
		**out = **in
	}
	if in.OpportunisticOnion != nil {
		in, out := &in.OpportunisticOnion, &out.OpportunisticOnion
		*out = new(string)
		**out = **in
	}
	if in.OrangeToOrange != nil {
		in, out := &in.OrangeToOrange, &out.OrangeToOrange
		*out = new(string)
		**out = **in
	}
	if in.OriginErrorPagePassThru != nil {
		in, out := &in.OriginErrorPagePassThru, &out.OriginErrorPagePassThru
		*out = new(string)
		**out = **in
	}
	if in.OriginMaxHTTPVersion != nil {
		in, out := &in.OriginMaxHTTPVersion, &out.OriginMaxHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.Polish != nil {
		in, out := &in.Polish, &out.Polish
		*out = new(string)
		**out = **in
	}
	if in.PrefetchPreload != nil {
		in, out := &in.PrefetchPreload, &out.PrefetchPreload
		*out = new(string)
		**out = **in
	}
	if in.PrivacyPass != nil {
		in, out := &in.PrivacyPass, &out.PrivacyPass
		*out = new(string)
		**out = **in
	}
	if in.ProxyReadTimeout != nil {
		in, out := &in.ProxyReadTimeout, &out.ProxyReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.PseudoIPv4 != nil {
		in, out := &in.PseudoIPv4, &out.PseudoIPv4
		*out = new(string)
		**out = **in
	}
	if in.ResponseBuffering != nil {
		in, out := &in.ResponseBuffering, &out.ResponseBuffering
		*out = new(string)
		**out = **in
	}
	if in.RocketLoader != nil {
		in, out := &in.RocketLoader, &out.RocketLoader
		*out = new(string)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(string)
		**out = **in
	}
	if in.SecurityHeader != nil {
		in, out := &in.SecurityHeader, &out.SecurityHeader
		*out = make([]SettingsSecurityHeaderInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.ServerSideExclude != nil {
		in, out := &in.ServerSideExclude, &out.ServerSideExclude
		*out = new(string)
		**out = **in
	}
	if in.SortQueryStringForCache != nil {
		in, out := &in.SortQueryStringForCache, &out.SortQueryStringForCache
		*out = new(string)
		**out = **in
	}
	if in.TLS12Only != nil {
		in, out := &in.TLS12Only, &out.TLS12Only
		*out = new(string)
		**out = **in
	}
	if in.TLS13 != nil {
		in, out := &in.TLS13, &out.TLS13
		*out = new(string)
		**out = **in
	}
	if in.TLSClientAuth != nil {
		in, out := &in.TLSClientAuth, &out.TLSClientAuth
		*out = new(string)
		**out = **in
	}
	if in.TrueClientIPHeader != nil {
		in, out := &in.TrueClientIPHeader, &out.TrueClientIPHeader
		*out = new(string)
		**out = **in
	}
	if in.UniversalSSL != nil {
		in, out := &in.UniversalSSL, &out.UniversalSSL
		*out = new(string)
		**out = **in
	}
	if in.VisitorIP != nil {
		in, out := &in.VisitorIP, &out.VisitorIP
		*out = new(string)
		**out = **in
	}
	if in.Waf != nil {
		in, out := &in.Waf, &out.Waf
		*out = new(string)
		**out = **in
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = new(string)
		**out = **in
	}
	if in.Websockets != nil {
		in, out := &in.Websockets, &out.Websockets
		*out = new(string)
		**out = **in
	}
	if in.ZeroRtt != nil {
		in, out := &in.ZeroRtt, &out.ZeroRtt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsInitParameters.
func (in *SettingsInitParameters) DeepCopy() *SettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsMinifyInitParameters) DeepCopyInto(out *SettingsMinifyInitParameters) {
	*out = *in
	if in.CSS != nil {
		in, out := &in.CSS, &out.CSS
		*out = new(string)
		**out = **in
	}
	if in.HTML != nil {
		in, out := &in.HTML, &out.HTML
		*out = new(string)
		**out = **in
	}
	if in.Js != nil {
		in, out := &in.Js, &out.Js
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsMinifyInitParameters.
func (in *SettingsMinifyInitParameters) DeepCopy() *SettingsMinifyInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsMinifyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsMinifyObservation) DeepCopyInto(out *SettingsMinifyObservation) {
	*out = *in
	if in.CSS != nil {
		in, out := &in.CSS, &out.CSS
		*out = new(string)
		**out = **in
	}
	if in.HTML != nil {
		in, out := &in.HTML, &out.HTML
		*out = new(string)
		**out = **in
	}
	if in.Js != nil {
		in, out := &in.Js, &out.Js
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsMinifyObservation.
func (in *SettingsMinifyObservation) DeepCopy() *SettingsMinifyObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsMinifyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsMinifyParameters) DeepCopyInto(out *SettingsMinifyParameters) {
	*out = *in
	if in.CSS != nil {
		in, out := &in.CSS, &out.CSS
		*out = new(string)
		**out = **in
	}
	if in.HTML != nil {
		in, out := &in.HTML, &out.HTML
		*out = new(string)
		**out = **in
	}
	if in.Js != nil {
		in, out := &in.Js, &out.Js
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsMinifyParameters.
func (in *SettingsMinifyParameters) DeepCopy() *SettingsMinifyParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsMinifyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsMobileRedirectInitParameters) DeepCopyInto(out *SettingsMobileRedirectInitParameters) {
	*out = *in
	if in.MobileSubdomain != nil {
		in, out := &in.MobileSubdomain, &out.MobileSubdomain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StripURI != nil {
		in, out := &in.StripURI, &out.StripURI
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsMobileRedirectInitParameters.
func (in *SettingsMobileRedirectInitParameters) DeepCopy() *SettingsMobileRedirectInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsMobileRedirectInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsMobileRedirectObservation) DeepCopyInto(out *SettingsMobileRedirectObservation) {
	*out = *in
	if in.MobileSubdomain != nil {
		in, out := &in.MobileSubdomain, &out.MobileSubdomain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StripURI != nil {
		in, out := &in.StripURI, &out.StripURI
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsMobileRedirectObservation.
func (in *SettingsMobileRedirectObservation) DeepCopy() *SettingsMobileRedirectObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsMobileRedirectObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsMobileRedirectParameters) DeepCopyInto(out *SettingsMobileRedirectParameters) {
	*out = *in
	if in.MobileSubdomain != nil {
		in, out := &in.MobileSubdomain, &out.MobileSubdomain
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StripURI != nil {
		in, out := &in.StripURI, &out.StripURI
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsMobileRedirectParameters.
func (in *SettingsMobileRedirectParameters) DeepCopy() *SettingsMobileRedirectParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsMobileRedirectParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsObservation) DeepCopyInto(out *SettingsObservation) {
	*out = *in
	if in.AlwaysOnline != nil {
		in, out := &in.AlwaysOnline, &out.AlwaysOnline
		*out = new(string)
		**out = **in
	}
	if in.AlwaysUseHTTPS != nil {
		in, out := &in.AlwaysUseHTTPS, &out.AlwaysUseHTTPS
		*out = new(string)
		**out = **in
	}
	if in.AutomaticHTTPSRewrites != nil {
		in, out := &in.AutomaticHTTPSRewrites, &out.AutomaticHTTPSRewrites
		*out = new(string)
		**out = **in
	}
	if in.BinaryAst != nil {
		in, out := &in.BinaryAst, &out.BinaryAst
		*out = new(string)
		**out = **in
	}
	if in.Brotli != nil {
		in, out := &in.Brotli, &out.Brotli
		*out = new(string)
		**out = **in
	}
	if in.BrowserCacheTTL != nil {
		in, out := &in.BrowserCacheTTL, &out.BrowserCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.BrowserCheck != nil {
		in, out := &in.BrowserCheck, &out.BrowserCheck
		*out = new(string)
		**out = **in
	}
	if in.CacheLevel != nil {
		in, out := &in.CacheLevel, &out.CacheLevel
		*out = new(string)
		**out = **in
	}
	if in.ChallengeTTL != nil {
		in, out := &in.ChallengeTTL, &out.ChallengeTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CnameFlattening != nil {
		in, out := &in.CnameFlattening, &out.CnameFlattening
		*out = new(string)
		**out = **in
	}
	if in.DevelopmentMode != nil {
		in, out := &in.DevelopmentMode, &out.DevelopmentMode
		*out = new(string)
		**out = **in
	}
	if in.EarlyHints != nil {
		in, out := &in.EarlyHints, &out.EarlyHints
		*out = new(string)
		**out = **in
	}
	if in.EmailObfuscation != nil {
		in, out := &in.EmailObfuscation, &out.EmailObfuscation
		*out = new(string)
		**out = **in
	}
	if in.FilterLogsToCloudflare != nil {
		in, out := &in.FilterLogsToCloudflare, &out.FilterLogsToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.Fonts != nil {
		in, out := &in.Fonts, &out.Fonts
		*out = new(string)
		**out = **in
	}
	if in.H2Prioritization != nil {
		in, out := &in.H2Prioritization, &out.H2Prioritization
		*out = new(string)
		**out = **in
	}
	if in.HotlinkProtection != nil {
		in, out := &in.HotlinkProtection, &out.HotlinkProtection
		*out = new(string)
		**out = **in
	}
	if in.Http2 != nil {
		in, out := &in.Http2, &out.Http2
		*out = new(string)
		**out = **in
	}
	if in.Http3 != nil {
		in, out := &in.Http3, &out.Http3
		*out = new(string)
		**out = **in
	}
	if in.IPGeolocation != nil {
		in, out := &in.IPGeolocation, &out.IPGeolocation
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.ImageResizing != nil {
		in, out := &in.ImageResizing, &out.ImageResizing
		*out = new(string)
		**out = **in
	}
	if in.LogToCloudflare != nil {
		in, out := &in.LogToCloudflare, &out.LogToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.MaxUpload != nil {
		in, out := &in.MaxUpload, &out.MaxUpload
		*out = new(float64)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Minify != nil {
		in, out := &in.Minify, &out.Minify
		*out = make([]SettingsMinifyObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mirage != nil {
		in, out := &in.Mirage, &out.Mirage
		*out = new(string)
		**out = **in
	}
	if in.MobileRedirect != nil {
		in, out := &in.MobileRedirect, &out.MobileRedirect
		*out = make([]SettingsMobileRedirectObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpportunisticEncryption != nil {
		in, out := &in.OpportunisticEncryption, &out.OpportunisticEncryption
		*out = new(string)
		**out = **in
	}
	if in.OpportunisticOnion != nil {
		in, out := &in.OpportunisticOnion, &out.OpportunisticOnion
		*out = new(string)
		**out = **in
	}
	if in.OrangeToOrange != nil {
		in, out := &in.OrangeToOrange, &out.OrangeToOrange
		*out = new(string)
		**out = **in
	}
	if in.OriginErrorPagePassThru != nil {
		in, out := &in.OriginErrorPagePassThru, &out.OriginErrorPagePassThru
		*out = new(string)
		**out = **in
	}
	if in.OriginMaxHTTPVersion != nil {
		in, out := &in.OriginMaxHTTPVersion, &out.OriginMaxHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.Polish != nil {
		in, out := &in.Polish, &out.Polish
		*out = new(string)
		**out = **in
	}
	if in.PrefetchPreload != nil {
		in, out := &in.PrefetchPreload, &out.PrefetchPreload
		*out = new(string)
		**out = **in
	}
	if in.PrivacyPass != nil {
		in, out := &in.PrivacyPass, &out.PrivacyPass
		*out = new(string)
		**out = **in
	}
	if in.ProxyReadTimeout != nil {
		in, out := &in.ProxyReadTimeout, &out.ProxyReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.PseudoIPv4 != nil {
		in, out := &in.PseudoIPv4, &out.PseudoIPv4
		*out = new(string)
		**out = **in
	}
	if in.ResponseBuffering != nil {
		in, out := &in.ResponseBuffering, &out.ResponseBuffering
		*out = new(string)
		**out = **in
	}
	if in.RocketLoader != nil {
		in, out := &in.RocketLoader, &out.RocketLoader
		*out = new(string)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(string)
		**out = **in
	}
	if in.SecurityHeader != nil {
		in, out := &in.SecurityHeader, &out.SecurityHeader
		*out = make([]SettingsSecurityHeaderObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.ServerSideExclude != nil {
		in, out := &in.ServerSideExclude, &out.ServerSideExclude
		*out = new(string)
		**out = **in
	}
	if in.SortQueryStringForCache != nil {
		in, out := &in.SortQueryStringForCache, &out.SortQueryStringForCache
		*out = new(string)
		**out = **in
	}
	if in.TLS12Only != nil {
		in, out := &in.TLS12Only, &out.TLS12Only
		*out = new(string)
		**out = **in
	}
	if in.TLS13 != nil {
		in, out := &in.TLS13, &out.TLS13
		*out = new(string)
		**out = **in
	}
	if in.TLSClientAuth != nil {
		in, out := &in.TLSClientAuth, &out.TLSClientAuth
		*out = new(string)
		**out = **in
	}
	if in.TrueClientIPHeader != nil {
		in, out := &in.TrueClientIPHeader, &out.TrueClientIPHeader
		*out = new(string)
		**out = **in
	}
	if in.UniversalSSL != nil {
		in, out := &in.UniversalSSL, &out.UniversalSSL
		*out = new(string)
		**out = **in
	}
	if in.VisitorIP != nil {
		in, out := &in.VisitorIP, &out.VisitorIP
		*out = new(string)
		**out = **in
	}
	if in.Waf != nil {
		in, out := &in.Waf, &out.Waf
		*out = new(string)
		**out = **in
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = new(string)
		**out = **in
	}
	if in.Websockets != nil {
		in, out := &in.Websockets, &out.Websockets
		*out = new(string)
		**out = **in
	}
	if in.ZeroRtt != nil {
		in, out := &in.ZeroRtt, &out.ZeroRtt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsObservation.
func (in *SettingsObservation) DeepCopy() *SettingsObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverride) DeepCopyInto(out *SettingsOverride) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverride.
func (in *SettingsOverride) DeepCopy() *SettingsOverride {
	if in == nil {
		return nil
	}
	out := new(SettingsOverride)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingsOverride) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverrideInitParameters) DeepCopyInto(out *SettingsOverrideInitParameters) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverrideInitParameters.
func (in *SettingsOverrideInitParameters) DeepCopy() *SettingsOverrideInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsOverrideInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverrideList) DeepCopyInto(out *SettingsOverrideList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]SettingsOverride, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverrideList.
func (in *SettingsOverrideList) DeepCopy() *SettingsOverrideList {
	if in == nil {
		return nil
	}
	out := new(SettingsOverrideList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *SettingsOverrideList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverrideObservation) DeepCopyInto(out *SettingsOverrideObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InitialSettings != nil {
		in, out := &in.InitialSettings, &out.InitialSettings
		*out = make([]InitialSettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InitialSettingsReadAt != nil {
		in, out := &in.InitialSettingsReadAt, &out.InitialSettingsReadAt
		*out = new(string)
		**out = **in
	}
	if in.ReadonlySettings != nil {
		in, out := &in.ReadonlySettings, &out.ReadonlySettings
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneStatus != nil {
		in, out := &in.ZoneStatus, &out.ZoneStatus
		*out = new(string)
		**out = **in
	}
	if in.ZoneType != nil {
		in, out := &in.ZoneType, &out.ZoneType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverrideObservation.
func (in *SettingsOverrideObservation) DeepCopy() *SettingsOverrideObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsOverrideObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverrideParameters) DeepCopyInto(out *SettingsOverrideParameters) {
	*out = *in
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = make([]SettingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverrideParameters.
func (in *SettingsOverrideParameters) DeepCopy() *SettingsOverrideParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsOverrideParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverrideSpec) DeepCopyInto(out *SettingsOverrideSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverrideSpec.
func (in *SettingsOverrideSpec) DeepCopy() *SettingsOverrideSpec {
	if in == nil {
		return nil
	}
	out := new(SettingsOverrideSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsOverrideStatus) DeepCopyInto(out *SettingsOverrideStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsOverrideStatus.
func (in *SettingsOverrideStatus) DeepCopy() *SettingsOverrideStatus {
	if in == nil {
		return nil
	}
	out := new(SettingsOverrideStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsParameters) DeepCopyInto(out *SettingsParameters) {
	*out = *in
	if in.AlwaysOnline != nil {
		in, out := &in.AlwaysOnline, &out.AlwaysOnline
		*out = new(string)
		**out = **in
	}
	if in.AlwaysUseHTTPS != nil {
		in, out := &in.AlwaysUseHTTPS, &out.AlwaysUseHTTPS
		*out = new(string)
		**out = **in
	}
	if in.AutomaticHTTPSRewrites != nil {
		in, out := &in.AutomaticHTTPSRewrites, &out.AutomaticHTTPSRewrites
		*out = new(string)
		**out = **in
	}
	if in.BinaryAst != nil {
		in, out := &in.BinaryAst, &out.BinaryAst
		*out = new(string)
		**out = **in
	}
	if in.Brotli != nil {
		in, out := &in.Brotli, &out.Brotli
		*out = new(string)
		**out = **in
	}
	if in.BrowserCacheTTL != nil {
		in, out := &in.BrowserCacheTTL, &out.BrowserCacheTTL
		*out = new(float64)
		**out = **in
	}
	if in.BrowserCheck != nil {
		in, out := &in.BrowserCheck, &out.BrowserCheck
		*out = new(string)
		**out = **in
	}
	if in.CacheLevel != nil {
		in, out := &in.CacheLevel, &out.CacheLevel
		*out = new(string)
		**out = **in
	}
	if in.ChallengeTTL != nil {
		in, out := &in.ChallengeTTL, &out.ChallengeTTL
		*out = new(float64)
		**out = **in
	}
	if in.Ciphers != nil {
		in, out := &in.Ciphers, &out.Ciphers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.CnameFlattening != nil {
		in, out := &in.CnameFlattening, &out.CnameFlattening
		*out = new(string)
		**out = **in
	}
	if in.DevelopmentMode != nil {
		in, out := &in.DevelopmentMode, &out.DevelopmentMode
		*out = new(string)
		**out = **in
	}
	if in.EarlyHints != nil {
		in, out := &in.EarlyHints, &out.EarlyHints
		*out = new(string)
		**out = **in
	}
	if in.EmailObfuscation != nil {
		in, out := &in.EmailObfuscation, &out.EmailObfuscation
		*out = new(string)
		**out = **in
	}
	if in.FilterLogsToCloudflare != nil {
		in, out := &in.FilterLogsToCloudflare, &out.FilterLogsToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.Fonts != nil {
		in, out := &in.Fonts, &out.Fonts
		*out = new(string)
		**out = **in
	}
	if in.H2Prioritization != nil {
		in, out := &in.H2Prioritization, &out.H2Prioritization
		*out = new(string)
		**out = **in
	}
	if in.HotlinkProtection != nil {
		in, out := &in.HotlinkProtection, &out.HotlinkProtection
		*out = new(string)
		**out = **in
	}
	if in.Http2 != nil {
		in, out := &in.Http2, &out.Http2
		*out = new(string)
		**out = **in
	}
	if in.Http3 != nil {
		in, out := &in.Http3, &out.Http3
		*out = new(string)
		**out = **in
	}
	if in.IPGeolocation != nil {
		in, out := &in.IPGeolocation, &out.IPGeolocation
		*out = new(string)
		**out = **in
	}
	if in.IPv6 != nil {
		in, out := &in.IPv6, &out.IPv6
		*out = new(string)
		**out = **in
	}
	if in.ImageResizing != nil {
		in, out := &in.ImageResizing, &out.ImageResizing
		*out = new(string)
		**out = **in
	}
	if in.LogToCloudflare != nil {
		in, out := &in.LogToCloudflare, &out.LogToCloudflare
		*out = new(string)
		**out = **in
	}
	if in.MaxUpload != nil {
		in, out := &in.MaxUpload, &out.MaxUpload
		*out = new(float64)
		**out = **in
	}
	if in.MinTLSVersion != nil {
		in, out := &in.MinTLSVersion, &out.MinTLSVersion
		*out = new(string)
		**out = **in
	}
	if in.Minify != nil {
		in, out := &in.Minify, &out.Minify
		*out = make([]SettingsMinifyParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Mirage != nil {
		in, out := &in.Mirage, &out.Mirage
		*out = new(string)
		**out = **in
	}
	if in.MobileRedirect != nil {
		in, out := &in.MobileRedirect, &out.MobileRedirect
		*out = make([]SettingsMobileRedirectParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.OpportunisticEncryption != nil {
		in, out := &in.OpportunisticEncryption, &out.OpportunisticEncryption
		*out = new(string)
		**out = **in
	}
	if in.OpportunisticOnion != nil {
		in, out := &in.OpportunisticOnion, &out.OpportunisticOnion
		*out = new(string)
		**out = **in
	}
	if in.OrangeToOrange != nil {
		in, out := &in.OrangeToOrange, &out.OrangeToOrange
		*out = new(string)
		**out = **in
	}
	if in.OriginErrorPagePassThru != nil {
		in, out := &in.OriginErrorPagePassThru, &out.OriginErrorPagePassThru
		*out = new(string)
		**out = **in
	}
	if in.OriginMaxHTTPVersion != nil {
		in, out := &in.OriginMaxHTTPVersion, &out.OriginMaxHTTPVersion
		*out = new(string)
		**out = **in
	}
	if in.Polish != nil {
		in, out := &in.Polish, &out.Polish
		*out = new(string)
		**out = **in
	}
	if in.PrefetchPreload != nil {
		in, out := &in.PrefetchPreload, &out.PrefetchPreload
		*out = new(string)
		**out = **in
	}
	if in.PrivacyPass != nil {
		in, out := &in.PrivacyPass, &out.PrivacyPass
		*out = new(string)
		**out = **in
	}
	if in.ProxyReadTimeout != nil {
		in, out := &in.ProxyReadTimeout, &out.ProxyReadTimeout
		*out = new(string)
		**out = **in
	}
	if in.PseudoIPv4 != nil {
		in, out := &in.PseudoIPv4, &out.PseudoIPv4
		*out = new(string)
		**out = **in
	}
	if in.ResponseBuffering != nil {
		in, out := &in.ResponseBuffering, &out.ResponseBuffering
		*out = new(string)
		**out = **in
	}
	if in.RocketLoader != nil {
		in, out := &in.RocketLoader, &out.RocketLoader
		*out = new(string)
		**out = **in
	}
	if in.SSL != nil {
		in, out := &in.SSL, &out.SSL
		*out = new(string)
		**out = **in
	}
	if in.SecurityHeader != nil {
		in, out := &in.SecurityHeader, &out.SecurityHeader
		*out = make([]SettingsSecurityHeaderParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SecurityLevel != nil {
		in, out := &in.SecurityLevel, &out.SecurityLevel
		*out = new(string)
		**out = **in
	}
	if in.ServerSideExclude != nil {
		in, out := &in.ServerSideExclude, &out.ServerSideExclude
		*out = new(string)
		**out = **in
	}
	if in.SortQueryStringForCache != nil {
		in, out := &in.SortQueryStringForCache, &out.SortQueryStringForCache
		*out = new(string)
		**out = **in
	}
	if in.TLS12Only != nil {
		in, out := &in.TLS12Only, &out.TLS12Only
		*out = new(string)
		**out = **in
	}
	if in.TLS13 != nil {
		in, out := &in.TLS13, &out.TLS13
		*out = new(string)
		**out = **in
	}
	if in.TLSClientAuth != nil {
		in, out := &in.TLSClientAuth, &out.TLSClientAuth
		*out = new(string)
		**out = **in
	}
	if in.TrueClientIPHeader != nil {
		in, out := &in.TrueClientIPHeader, &out.TrueClientIPHeader
		*out = new(string)
		**out = **in
	}
	if in.UniversalSSL != nil {
		in, out := &in.UniversalSSL, &out.UniversalSSL
		*out = new(string)
		**out = **in
	}
	if in.VisitorIP != nil {
		in, out := &in.VisitorIP, &out.VisitorIP
		*out = new(string)
		**out = **in
	}
	if in.Waf != nil {
		in, out := &in.Waf, &out.Waf
		*out = new(string)
		**out = **in
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = new(string)
		**out = **in
	}
	if in.Websockets != nil {
		in, out := &in.Websockets, &out.Websockets
		*out = new(string)
		**out = **in
	}
	if in.ZeroRtt != nil {
		in, out := &in.ZeroRtt, &out.ZeroRtt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsParameters.
func (in *SettingsParameters) DeepCopy() *SettingsParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityHeaderInitParameters) DeepCopyInto(out *SettingsSecurityHeaderInitParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.Nosniff != nil {
		in, out := &in.Nosniff, &out.Nosniff
		*out = new(bool)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityHeaderInitParameters.
func (in *SettingsSecurityHeaderInitParameters) DeepCopy() *SettingsSecurityHeaderInitParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityHeaderInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityHeaderObservation) DeepCopyInto(out *SettingsSecurityHeaderObservation) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.Nosniff != nil {
		in, out := &in.Nosniff, &out.Nosniff
		*out = new(bool)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityHeaderObservation.
func (in *SettingsSecurityHeaderObservation) DeepCopy() *SettingsSecurityHeaderObservation {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityHeaderObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SettingsSecurityHeaderParameters) DeepCopyInto(out *SettingsSecurityHeaderParameters) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.IncludeSubdomains != nil {
		in, out := &in.IncludeSubdomains, &out.IncludeSubdomains
		*out = new(bool)
		**out = **in
	}
	if in.MaxAge != nil {
		in, out := &in.MaxAge, &out.MaxAge
		*out = new(float64)
		**out = **in
	}
	if in.Nosniff != nil {
		in, out := &in.Nosniff, &out.Nosniff
		*out = new(bool)
		**out = **in
	}
	if in.Preload != nil {
		in, out := &in.Preload, &out.Preload
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SettingsSecurityHeaderParameters.
func (in *SettingsSecurityHeaderParameters) DeepCopy() *SettingsSecurityHeaderParameters {
	if in == nil {
		return nil
	}
	out := new(SettingsSecurityHeaderParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSetting) DeepCopyInto(out *TLSSetting) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSetting.
func (in *TLSSetting) DeepCopy() *TLSSetting {
	if in == nil {
		return nil
	}
	out := new(TLSSetting)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TLSSetting) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphers) DeepCopyInto(out *TLSSettingCiphers) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphers.
func (in *TLSSettingCiphers) DeepCopy() *TLSSettingCiphers {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphers)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TLSSettingCiphers) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphersInitParameters) DeepCopyInto(out *TLSSettingCiphersInitParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphersInitParameters.
func (in *TLSSettingCiphersInitParameters) DeepCopy() *TLSSettingCiphersInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphersList) DeepCopyInto(out *TLSSettingCiphersList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TLSSettingCiphers, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphersList.
func (in *TLSSettingCiphersList) DeepCopy() *TLSSettingCiphersList {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphersList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TLSSettingCiphersList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphersObservation) DeepCopyInto(out *TLSSettingCiphersObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphersObservation.
func (in *TLSSettingCiphersObservation) DeepCopy() *TLSSettingCiphersObservation {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphersParameters) DeepCopyInto(out *TLSSettingCiphersParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Ports != nil {
		in, out := &in.Ports, &out.Ports
		*out = make([]*float64, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(float64)
				**out = **in
			}
		}
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphersParameters.
func (in *TLSSettingCiphersParameters) DeepCopy() *TLSSettingCiphersParameters {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphersSpec) DeepCopyInto(out *TLSSettingCiphersSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphersSpec.
func (in *TLSSettingCiphersSpec) DeepCopy() *TLSSettingCiphersSpec {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphersSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingCiphersStatus) DeepCopyInto(out *TLSSettingCiphersStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingCiphersStatus.
func (in *TLSSettingCiphersStatus) DeepCopy() *TLSSettingCiphersStatus {
	if in == nil {
		return nil
	}
	out := new(TLSSettingCiphersStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingInitParameters) DeepCopyInto(out *TLSSettingInitParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingInitParameters.
func (in *TLSSettingInitParameters) DeepCopy() *TLSSettingInitParameters {
	if in == nil {
		return nil
	}
	out := new(TLSSettingInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingList) DeepCopyInto(out *TLSSettingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TLSSetting, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingList.
func (in *TLSSettingList) DeepCopy() *TLSSettingList {
	if in == nil {
		return nil
	}
	out := new(TLSSettingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TLSSettingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingObservation) DeepCopyInto(out *TLSSettingObservation) {
	*out = *in
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingObservation.
func (in *TLSSettingObservation) DeepCopy() *TLSSettingObservation {
	if in == nil {
		return nil
	}
	out := new(TLSSettingObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingParameters) DeepCopyInto(out *TLSSettingParameters) {
	*out = *in
	if in.Hostname != nil {
		in, out := &in.Hostname, &out.Hostname
		*out = new(string)
		**out = **in
	}
	if in.Setting != nil {
		in, out := &in.Setting, &out.Setting
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingParameters.
func (in *TLSSettingParameters) DeepCopy() *TLSSettingParameters {
	if in == nil {
		return nil
	}
	out := new(TLSSettingParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingSpec) DeepCopyInto(out *TLSSettingSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingSpec.
func (in *TLSSettingSpec) DeepCopy() *TLSSettingSpec {
	if in == nil {
		return nil
	}
	out := new(TLSSettingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TLSSettingStatus) DeepCopyInto(out *TLSSettingStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TLSSettingStatus.
func (in *TLSSettingStatus) DeepCopy() *TLSSettingStatus {
	if in == nil {
		return nil
	}
	out := new(TLSSettingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCache) DeepCopyInto(out *TieredCache) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCache.
func (in *TieredCache) DeepCopy() *TieredCache {
	if in == nil {
		return nil
	}
	out := new(TieredCache)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TieredCache) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCacheInitParameters) DeepCopyInto(out *TieredCacheInitParameters) {
	*out = *in
	if in.CacheType != nil {
		in, out := &in.CacheType, &out.CacheType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCacheInitParameters.
func (in *TieredCacheInitParameters) DeepCopy() *TieredCacheInitParameters {
	if in == nil {
		return nil
	}
	out := new(TieredCacheInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCacheList) DeepCopyInto(out *TieredCacheList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TieredCache, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCacheList.
func (in *TieredCacheList) DeepCopy() *TieredCacheList {
	if in == nil {
		return nil
	}
	out := new(TieredCacheList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TieredCacheList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCacheObservation) DeepCopyInto(out *TieredCacheObservation) {
	*out = *in
	if in.CacheType != nil {
		in, out := &in.CacheType, &out.CacheType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCacheObservation.
func (in *TieredCacheObservation) DeepCopy() *TieredCacheObservation {
	if in == nil {
		return nil
	}
	out := new(TieredCacheObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCacheParameters) DeepCopyInto(out *TieredCacheParameters) {
	*out = *in
	if in.CacheType != nil {
		in, out := &in.CacheType, &out.CacheType
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCacheParameters.
func (in *TieredCacheParameters) DeepCopy() *TieredCacheParameters {
	if in == nil {
		return nil
	}
	out := new(TieredCacheParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCacheSpec) DeepCopyInto(out *TieredCacheSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCacheSpec.
func (in *TieredCacheSpec) DeepCopy() *TieredCacheSpec {
	if in == nil {
		return nil
	}
	out := new(TieredCacheSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TieredCacheStatus) DeepCopyInto(out *TieredCacheStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TieredCacheStatus.
func (in *TieredCacheStatus) DeepCopy() *TieredCacheStatus {
	if in == nil {
		return nil
	}
	out := new(TieredCacheStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLS) DeepCopyInto(out *TotalTLS) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLS.
func (in *TotalTLS) DeepCopy() *TotalTLS {
	if in == nil {
		return nil
	}
	out := new(TotalTLS)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TotalTLS) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLSInitParameters) DeepCopyInto(out *TotalTLSInitParameters) {
	*out = *in
	if in.CertificateAuthority != nil {
		in, out := &in.CertificateAuthority, &out.CertificateAuthority
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLSInitParameters.
func (in *TotalTLSInitParameters) DeepCopy() *TotalTLSInitParameters {
	if in == nil {
		return nil
	}
	out := new(TotalTLSInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLSList) DeepCopyInto(out *TotalTLSList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]TotalTLS, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLSList.
func (in *TotalTLSList) DeepCopy() *TotalTLSList {
	if in == nil {
		return nil
	}
	out := new(TotalTLSList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *TotalTLSList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLSObservation) DeepCopyInto(out *TotalTLSObservation) {
	*out = *in
	if in.CertificateAuthority != nil {
		in, out := &in.CertificateAuthority, &out.CertificateAuthority
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLSObservation.
func (in *TotalTLSObservation) DeepCopy() *TotalTLSObservation {
	if in == nil {
		return nil
	}
	out := new(TotalTLSObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLSParameters) DeepCopyInto(out *TotalTLSParameters) {
	*out = *in
	if in.CertificateAuthority != nil {
		in, out := &in.CertificateAuthority, &out.CertificateAuthority
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLSParameters.
func (in *TotalTLSParameters) DeepCopy() *TotalTLSParameters {
	if in == nil {
		return nil
	}
	out := new(TotalTLSParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLSSpec) DeepCopyInto(out *TotalTLSSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLSSpec.
func (in *TotalTLSSpec) DeepCopy() *TotalTLSSpec {
	if in == nil {
		return nil
	}
	out := new(TotalTLSSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TotalTLSStatus) DeepCopyInto(out *TotalTLSStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TotalTLSStatus.
func (in *TotalTLSStatus) DeepCopy() *TotalTLSStatus {
	if in == nil {
		return nil
	}
	out := new(TotalTLSStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettings) DeepCopyInto(out *URLNormalizationSettings) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettings.
func (in *URLNormalizationSettings) DeepCopy() *URLNormalizationSettings {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *URLNormalizationSettings) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettingsInitParameters) DeepCopyInto(out *URLNormalizationSettingsInitParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettingsInitParameters.
func (in *URLNormalizationSettingsInitParameters) DeepCopy() *URLNormalizationSettingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettingsList) DeepCopyInto(out *URLNormalizationSettingsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]URLNormalizationSettings, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettingsList.
func (in *URLNormalizationSettingsList) DeepCopy() *URLNormalizationSettingsList {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettingsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *URLNormalizationSettingsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettingsObservation) DeepCopyInto(out *URLNormalizationSettingsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettingsObservation.
func (in *URLNormalizationSettingsObservation) DeepCopy() *URLNormalizationSettingsObservation {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettingsParameters) DeepCopyInto(out *URLNormalizationSettingsParameters) {
	*out = *in
	if in.Scope != nil {
		in, out := &in.Scope, &out.Scope
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettingsParameters.
func (in *URLNormalizationSettingsParameters) DeepCopy() *URLNormalizationSettingsParameters {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettingsSpec) DeepCopyInto(out *URLNormalizationSettingsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettingsSpec.
func (in *URLNormalizationSettingsSpec) DeepCopy() *URLNormalizationSettingsSpec {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettingsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *URLNormalizationSettingsStatus) DeepCopyInto(out *URLNormalizationSettingsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new URLNormalizationSettingsStatus.
func (in *URLNormalizationSettingsStatus) DeepCopy() *URLNormalizationSettingsStatus {
	if in == nil {
		return nil
	}
	out := new(URLNormalizationSettingsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRule) DeepCopyInto(out *UserAgentBlockingRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRule.
func (in *UserAgentBlockingRule) DeepCopy() *UserAgentBlockingRule {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserAgentBlockingRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRuleInitParameters) DeepCopyInto(out *UserAgentBlockingRuleInitParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRuleInitParameters.
func (in *UserAgentBlockingRuleInitParameters) DeepCopy() *UserAgentBlockingRuleInitParameters {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRuleInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRuleList) DeepCopyInto(out *UserAgentBlockingRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]UserAgentBlockingRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRuleList.
func (in *UserAgentBlockingRuleList) DeepCopy() *UserAgentBlockingRuleList {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *UserAgentBlockingRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRuleObservation) DeepCopyInto(out *UserAgentBlockingRuleObservation) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRuleObservation.
func (in *UserAgentBlockingRuleObservation) DeepCopy() *UserAgentBlockingRuleObservation {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRuleObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRuleParameters) DeepCopyInto(out *UserAgentBlockingRuleParameters) {
	*out = *in
	if in.Configuration != nil {
		in, out := &in.Configuration, &out.Configuration
		*out = make([]ConfigurationParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Mode != nil {
		in, out := &in.Mode, &out.Mode
		*out = new(string)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRuleParameters.
func (in *UserAgentBlockingRuleParameters) DeepCopy() *UserAgentBlockingRuleParameters {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRuleParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRuleSpec) DeepCopyInto(out *UserAgentBlockingRuleSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRuleSpec.
func (in *UserAgentBlockingRuleSpec) DeepCopy() *UserAgentBlockingRuleSpec {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRuleSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *UserAgentBlockingRuleStatus) DeepCopyInto(out *UserAgentBlockingRuleStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new UserAgentBlockingRuleStatus.
func (in *UserAgentBlockingRuleStatus) DeepCopy() *UserAgentBlockingRuleStatus {
	if in == nil {
		return nil
	}
	out := new(UserAgentBlockingRuleStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Zone) DeepCopyInto(out *Zone) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Zone.
func (in *Zone) DeepCopy() *Zone {
	if in == nil {
		return nil
	}
	out := new(Zone)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Zone) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariants) DeepCopyInto(out *ZoneCacheVariants) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariants.
func (in *ZoneCacheVariants) DeepCopy() *ZoneCacheVariants {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariants)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneCacheVariants) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariantsInitParameters) DeepCopyInto(out *ZoneCacheVariantsInitParameters) {
	*out = *in
	if in.Avif != nil {
		in, out := &in.Avif, &out.Avif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Bmp != nil {
		in, out := &in.Bmp, &out.Bmp
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Gif != nil {
		in, out := &in.Gif, &out.Gif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jp2 != nil {
		in, out := &in.Jp2, &out.Jp2
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpeg != nil {
		in, out := &in.Jpeg, &out.Jpeg
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpg != nil {
		in, out := &in.Jpg, &out.Jpg
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpg2 != nil {
		in, out := &in.Jpg2, &out.Jpg2
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Png != nil {
		in, out := &in.Png, &out.Png
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tif != nil {
		in, out := &in.Tif, &out.Tif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tiff != nil {
		in, out := &in.Tiff, &out.Tiff
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariantsInitParameters.
func (in *ZoneCacheVariantsInitParameters) DeepCopy() *ZoneCacheVariantsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariantsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariantsList) DeepCopyInto(out *ZoneCacheVariantsList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ZoneCacheVariants, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariantsList.
func (in *ZoneCacheVariantsList) DeepCopy() *ZoneCacheVariantsList {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariantsList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneCacheVariantsList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariantsObservation) DeepCopyInto(out *ZoneCacheVariantsObservation) {
	*out = *in
	if in.Avif != nil {
		in, out := &in.Avif, &out.Avif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Bmp != nil {
		in, out := &in.Bmp, &out.Bmp
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Gif != nil {
		in, out := &in.Gif, &out.Gif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Jp2 != nil {
		in, out := &in.Jp2, &out.Jp2
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpeg != nil {
		in, out := &in.Jpeg, &out.Jpeg
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpg != nil {
		in, out := &in.Jpg, &out.Jpg
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpg2 != nil {
		in, out := &in.Jpg2, &out.Jpg2
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Png != nil {
		in, out := &in.Png, &out.Png
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tif != nil {
		in, out := &in.Tif, &out.Tif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tiff != nil {
		in, out := &in.Tiff, &out.Tiff
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariantsObservation.
func (in *ZoneCacheVariantsObservation) DeepCopy() *ZoneCacheVariantsObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariantsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariantsParameters) DeepCopyInto(out *ZoneCacheVariantsParameters) {
	*out = *in
	if in.Avif != nil {
		in, out := &in.Avif, &out.Avif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Bmp != nil {
		in, out := &in.Bmp, &out.Bmp
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Gif != nil {
		in, out := &in.Gif, &out.Gif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jp2 != nil {
		in, out := &in.Jp2, &out.Jp2
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpeg != nil {
		in, out := &in.Jpeg, &out.Jpeg
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpg != nil {
		in, out := &in.Jpg, &out.Jpg
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Jpg2 != nil {
		in, out := &in.Jpg2, &out.Jpg2
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Png != nil {
		in, out := &in.Png, &out.Png
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tif != nil {
		in, out := &in.Tif, &out.Tif
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Tiff != nil {
		in, out := &in.Tiff, &out.Tiff
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Webp != nil {
		in, out := &in.Webp, &out.Webp
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ZoneID != nil {
		in, out := &in.ZoneID, &out.ZoneID
		*out = new(string)
		**out = **in
	}
	if in.ZoneIDRef != nil {
		in, out := &in.ZoneIDRef, &out.ZoneIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ZoneIDSelector != nil {
		in, out := &in.ZoneIDSelector, &out.ZoneIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariantsParameters.
func (in *ZoneCacheVariantsParameters) DeepCopy() *ZoneCacheVariantsParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariantsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariantsSpec) DeepCopyInto(out *ZoneCacheVariantsSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariantsSpec.
func (in *ZoneCacheVariantsSpec) DeepCopy() *ZoneCacheVariantsSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariantsSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneCacheVariantsStatus) DeepCopyInto(out *ZoneCacheVariantsStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneCacheVariantsStatus.
func (in *ZoneCacheVariantsStatus) DeepCopy() *ZoneCacheVariantsStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneCacheVariantsStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneInitParameters) DeepCopyInto(out *ZoneInitParameters) {
	*out = *in
	if in.JumpStart != nil {
		in, out := &in.JumpStart, &out.JumpStart
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneInitParameters.
func (in *ZoneInitParameters) DeepCopy() *ZoneInitParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneList) DeepCopyInto(out *ZoneList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Zone, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneList.
func (in *ZoneList) DeepCopy() *ZoneList {
	if in == nil {
		return nil
	}
	out := new(ZoneList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ZoneList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneObservation) DeepCopyInto(out *ZoneObservation) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.JumpStart != nil {
		in, out := &in.JumpStart, &out.JumpStart
		*out = new(bool)
		**out = **in
	}
	if in.Meta != nil {
		in, out := &in.Meta, &out.Meta
		*out = make(map[string]*bool, len(*in))
		for key, val := range *in {
			var outVal *bool
			if val == nil {
				(*out)[key] = nil
			} else {
				in, out := &val, &outVal
				*out = new(bool)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.NameServers != nil {
		in, out := &in.NameServers, &out.NameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.VanityNameServers != nil {
		in, out := &in.VanityNameServers, &out.VanityNameServers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.VerificationKey != nil {
		in, out := &in.VerificationKey, &out.VerificationKey
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneObservation.
func (in *ZoneObservation) DeepCopy() *ZoneObservation {
	if in == nil {
		return nil
	}
	out := new(ZoneObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneParameters) DeepCopyInto(out *ZoneParameters) {
	*out = *in
	if in.AccountID != nil {
		in, out := &in.AccountID, &out.AccountID
		*out = new(string)
		**out = **in
	}
	if in.AccountIDRef != nil {
		in, out := &in.AccountIDRef, &out.AccountIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AccountIDSelector != nil {
		in, out := &in.AccountIDSelector, &out.AccountIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.JumpStart != nil {
		in, out := &in.JumpStart, &out.JumpStart
		*out = new(bool)
		**out = **in
	}
	if in.Paused != nil {
		in, out := &in.Paused, &out.Paused
		*out = new(bool)
		**out = **in
	}
	if in.Plan != nil {
		in, out := &in.Plan, &out.Plan
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Zone != nil {
		in, out := &in.Zone, &out.Zone
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneParameters.
func (in *ZoneParameters) DeepCopy() *ZoneParameters {
	if in == nil {
		return nil
	}
	out := new(ZoneParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneSpec) DeepCopyInto(out *ZoneSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneSpec.
func (in *ZoneSpec) DeepCopy() *ZoneSpec {
	if in == nil {
		return nil
	}
	out := new(ZoneSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ZoneStatus) DeepCopyInto(out *ZoneStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ZoneStatus.
func (in *ZoneStatus) DeepCopy() *ZoneStatus {
	if in == nil {
		return nil
	}
	out := new(ZoneStatus)
	in.DeepCopyInto(out)
	return out
}
