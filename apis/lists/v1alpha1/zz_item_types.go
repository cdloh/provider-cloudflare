/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ItemHostnameInitParameters struct {

	// The FQDN to match on.
	URLHostname *string `json:"urlHostname,omitempty" tf:"url_hostname,omitempty"`
}

type ItemHostnameObservation struct {

	// The FQDN to match on.
	URLHostname *string `json:"urlHostname,omitempty" tf:"url_hostname,omitempty"`
}

type ItemHostnameParameters struct {

	// The FQDN to match on.
	// +kubebuilder:validation:Optional
	URLHostname *string `json:"urlHostname,omitempty" tf:"url_hostname,omitempty"`
}

type ItemInitParameters_2 struct {

	// Autonomous system number to include in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// An optional comment for the item.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	Hostname []ItemHostnameInitParameters `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// IP address to include in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	Redirect []ItemRedirectInitParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type ItemObservation_2 struct {

	// The account identifier to target for the resource.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Autonomous system number to include in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// An optional comment for the item.
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	Hostname []ItemHostnameObservation `json:"hostname,omitempty" tf:"hostname,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// IP address to include in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// The list identifier to target for the resource.
	ListID *string `json:"listId,omitempty" tf:"list_id,omitempty"`

	// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	Redirect []ItemRedirectObservation `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type ItemParameters_2 struct {

	// The account identifier to target for the resource.
	// +crossplane:generate:reference:type=github.com/clementblaise/provider-cloudflare/apis/account/v1alpha1.Account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Reference to a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDRef *v1.Reference `json:"accountIdRef,omitempty" tf:"-"`

	// Selector for a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDSelector *v1.Selector `json:"accountIdSelector,omitempty" tf:"-"`

	// Autonomous system number to include in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	// +kubebuilder:validation:Optional
	Asn *float64 `json:"asn,omitempty" tf:"asn,omitempty"`

	// An optional comment for the item.
	// +kubebuilder:validation:Optional
	Comment *string `json:"comment,omitempty" tf:"comment,omitempty"`

	// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	// +kubebuilder:validation:Optional
	Hostname []ItemHostnameParameters `json:"hostname,omitempty" tf:"hostname,omitempty"`

	// IP address to include in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	// +kubebuilder:validation:Optional
	IP *string `json:"ip,omitempty" tf:"ip,omitempty"`

	// The list identifier to target for the resource.
	// +crossplane:generate:reference:type=List
	// +kubebuilder:validation:Optional
	ListID *string `json:"listId,omitempty" tf:"list_id,omitempty"`

	// Reference to a List to populate listId.
	// +kubebuilder:validation:Optional
	ListIDRef *v1.Reference `json:"listIdRef,omitempty" tf:"-"`

	// Selector for a List to populate listId.
	// +kubebuilder:validation:Optional
	ListIDSelector *v1.Selector `json:"listIdSelector,omitempty" tf:"-"`

	// Redirect configuration to store in the list. Must provide only one of `ip`, `redirect`, `hostname`, `asn`. **Modifying this attribute will force creation of a new resource.**
	// +kubebuilder:validation:Optional
	Redirect []ItemRedirectParameters `json:"redirect,omitempty" tf:"redirect,omitempty"`
}

type ItemRedirectInitParameters struct {

	// Whether the redirect also matches subdomains of the source url. Available values: `disabled`, `enabled`.
	IncludeSubdomains *string `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// Whether to preserve the path suffix when doing subpath matching. Available values: `disabled`, `enabled`.
	PreservePathSuffix *string `json:"preservePathSuffix,omitempty" tf:"preserve_path_suffix,omitempty"`

	// Whether the redirect target url should keep the query string of the request's url. Available values: `disabled`, `enabled`.
	PreserveQueryString *string `json:"preserveQueryString,omitempty" tf:"preserve_query_string,omitempty"`

	// The source url of the redirect.
	SourceURL *string `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// The status code to be used when redirecting a request.
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Whether the redirect also matches subpaths of the source url. Available values: `disabled`, `enabled`.
	SubpathMatching *string `json:"subpathMatching,omitempty" tf:"subpath_matching,omitempty"`

	// The target url of the redirect.
	TargetURL *string `json:"targetUrl,omitempty" tf:"target_url,omitempty"`
}

type ItemRedirectObservation struct {

	// Whether the redirect also matches subdomains of the source url. Available values: `disabled`, `enabled`.
	IncludeSubdomains *string `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// Whether to preserve the path suffix when doing subpath matching. Available values: `disabled`, `enabled`.
	PreservePathSuffix *string `json:"preservePathSuffix,omitempty" tf:"preserve_path_suffix,omitempty"`

	// Whether the redirect target url should keep the query string of the request's url. Available values: `disabled`, `enabled`.
	PreserveQueryString *string `json:"preserveQueryString,omitempty" tf:"preserve_query_string,omitempty"`

	// The source url of the redirect.
	SourceURL *string `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// The status code to be used when redirecting a request.
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Whether the redirect also matches subpaths of the source url. Available values: `disabled`, `enabled`.
	SubpathMatching *string `json:"subpathMatching,omitempty" tf:"subpath_matching,omitempty"`

	// The target url of the redirect.
	TargetURL *string `json:"targetUrl,omitempty" tf:"target_url,omitempty"`
}

type ItemRedirectParameters struct {

	// Whether the redirect also matches subdomains of the source url. Available values: `disabled`, `enabled`.
	// +kubebuilder:validation:Optional
	IncludeSubdomains *string `json:"includeSubdomains,omitempty" tf:"include_subdomains,omitempty"`

	// Whether to preserve the path suffix when doing subpath matching. Available values: `disabled`, `enabled`.
	// +kubebuilder:validation:Optional
	PreservePathSuffix *string `json:"preservePathSuffix,omitempty" tf:"preserve_path_suffix,omitempty"`

	// Whether the redirect target url should keep the query string of the request's url. Available values: `disabled`, `enabled`.
	// +kubebuilder:validation:Optional
	PreserveQueryString *string `json:"preserveQueryString,omitempty" tf:"preserve_query_string,omitempty"`

	// The source url of the redirect.
	// +kubebuilder:validation:Optional
	SourceURL *string `json:"sourceUrl,omitempty" tf:"source_url,omitempty"`

	// The status code to be used when redirecting a request.
	// +kubebuilder:validation:Optional
	StatusCode *float64 `json:"statusCode,omitempty" tf:"status_code,omitempty"`

	// Whether the redirect also matches subpaths of the source url. Available values: `disabled`, `enabled`.
	// +kubebuilder:validation:Optional
	SubpathMatching *string `json:"subpathMatching,omitempty" tf:"subpath_matching,omitempty"`

	// The target url of the redirect.
	// +kubebuilder:validation:Optional
	TargetURL *string `json:"targetUrl,omitempty" tf:"target_url,omitempty"`
}

// ItemSpec defines the desired state of Item
type ItemSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ItemParameters_2 `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider ItemInitParameters_2 `json:"initProvider,omitempty"`
}

// ItemStatus defines the observed state of Item.
type ItemStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ItemObservation_2 `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// Item is the Schema for the Items API. <no value>
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type Item struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ItemSpec   `json:"spec"`
	Status            ItemStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ItemList contains a list of Items
type ItemList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Item `json:"items"`
}

// Repository type metadata.
var (
	Item_Kind             = "Item"
	Item_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Item_Kind}.String()
	Item_KindAPIVersion   = Item_Kind + "." + CRDGroupVersion.String()
	Item_GroupVersionKind = CRDGroupVersion.WithKind(Item_Kind)
)

func init() {
	SchemeBuilder.Register(&Item{}, &ItemList{})
}
