/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PolicyWebhooksInitParameters struct {

	// The name of the webhook destination.
	// The name of the webhook destination.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional secret can be provided that will be passed in the cf-webhook-auth header when dispatching a webhook notification.
	// Secrets are not returned in any API response body.
	// Refer to the documentation for more details - https://api.cloudflare.com/#notification-webhooks-create-webhook.
	// An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the [documentation](https://api.cloudflare.com/#notification-webhooks-create-webhook) for more details.
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// The URL of the webhook destinations.
	// The URL of the webhook destinations. **Modifying this attribute will force creation of a new resource.**
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type PolicyWebhooksObservation struct {

	// The ID of the account for which the webhook destination has to be connected.
	// The account identifier to target for the resource.
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Timestamp of when the notification webhook was created.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Timestamp of when the notification webhook last faiuled.
	LastFailure *string `json:"lastFailure,omitempty" tf:"last_failure,omitempty"`

	// Timestamp of when the notification webhook was last successful.
	LastSuccess *string `json:"lastSuccess,omitempty" tf:"last_success,omitempty"`

	// The name of the webhook destination.
	// The name of the webhook destination.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional secret can be provided that will be passed in the cf-webhook-auth header when dispatching a webhook notification.
	// Secrets are not returned in any API response body.
	// Refer to the documentation for more details - https://api.cloudflare.com/#notification-webhooks-create-webhook.
	// An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the [documentation](https://api.cloudflare.com/#notification-webhooks-create-webhook) for more details.
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// The URL of the webhook destinations.
	// The URL of the webhook destinations. **Modifying this attribute will force creation of a new resource.**
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

type PolicyWebhooksParameters struct {

	// The ID of the account for which the webhook destination has to be connected.
	// The account identifier to target for the resource.
	// +crossplane:generate:reference:type=github.com/clementblaise/provider-cloudflare/apis/account/v1alpha1.Account
	// +kubebuilder:validation:Optional
	AccountID *string `json:"accountId,omitempty" tf:"account_id,omitempty"`

	// Reference to a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDRef *v1.Reference `json:"accountIdRef,omitempty" tf:"-"`

	// Selector for a Account in account to populate accountId.
	// +kubebuilder:validation:Optional
	AccountIDSelector *v1.Selector `json:"accountIdSelector,omitempty" tf:"-"`

	// The name of the webhook destination.
	// The name of the webhook destination.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// An optional secret can be provided that will be passed in the cf-webhook-auth header when dispatching a webhook notification.
	// Secrets are not returned in any API response body.
	// Refer to the documentation for more details - https://api.cloudflare.com/#notification-webhooks-create-webhook.
	// An optional secret can be provided that will be passed in the `cf-webhook-auth` header when dispatching a webhook notification. Secrets are not returned in any API response body. Refer to the [documentation](https://api.cloudflare.com/#notification-webhooks-create-webhook) for more details.
	// +kubebuilder:validation:Optional
	Secret *string `json:"secret,omitempty" tf:"secret,omitempty"`

	// The URL of the webhook destinations.
	// The URL of the webhook destinations. **Modifying this attribute will force creation of a new resource.**
	// +kubebuilder:validation:Optional
	URL *string `json:"url,omitempty" tf:"url,omitempty"`
}

// PolicyWebhooksSpec defines the desired state of PolicyWebhooks
type PolicyWebhooksSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PolicyWebhooksParameters `json:"forProvider"`
	// THIS IS AN ALPHA FIELD. Do not use it in production. It is not honored
	// unless the relevant Crossplane feature flag is enabled, and may be
	// changed or removed without notice.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PolicyWebhooksInitParameters `json:"initProvider,omitempty"`
}

// PolicyWebhooksStatus defines the observed state of PolicyWebhooks.
type PolicyWebhooksStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PolicyWebhooksObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyWebhooks is the Schema for the PolicyWebhookss API. Provides a resource to create and manage webhooks destinations for Cloudflare's notification policies.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,cloudflare}
type PolicyWebhooks struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || has(self.initProvider.name)",message="name is a required parameter"
	Spec   PolicyWebhooksSpec   `json:"spec"`
	Status PolicyWebhooksStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PolicyWebhooksList contains a list of PolicyWebhookss
type PolicyWebhooksList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PolicyWebhooks `json:"items"`
}

// Repository type metadata.
var (
	PolicyWebhooks_Kind             = "PolicyWebhooks"
	PolicyWebhooks_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PolicyWebhooks_Kind}.String()
	PolicyWebhooks_KindAPIVersion   = PolicyWebhooks_Kind + "." + CRDGroupVersion.String()
	PolicyWebhooks_GroupVersionKind = CRDGroupVersion.WithKind(PolicyWebhooks_Kind)
)

func init() {
	SchemeBuilder.Register(&PolicyWebhooks{}, &PolicyWebhooksList{})
}
