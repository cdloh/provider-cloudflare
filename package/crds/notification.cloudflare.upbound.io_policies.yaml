---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: policies.notification.cloudflare.upbound.io
spec:
  group: notification.cloudflare.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Policy is the Schema for the Policys API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: PolicySpec defines the desired state of Policy
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountId:
                    description: The account identifier to target for the resource.
                    type: string
                  accountIdRef:
                    description: Reference to a Account in account to populate accountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  accountIdSelector:
                    description: Selector for a Account in account to populate accountId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  alertType:
                    description: 'The event type that will trigger the dispatch of
                      a notification. See the developer documentation for descriptions
                      of [available alert types](https://developers.cloudflare.com/fundamentals/notifications/notification-available/).
                      Available values: `billing_usage_alert`, `health_check_status_notification`,
                      `g6_pool_toggle_alert`, `real_origin_monitoring`, `universal_ssl_event_type`,
                      `dedicated_ssl_certificate_event_type`, `custom_ssl_certificate_event_type`,
                      `access_custom_certificate_expiration_type`, `zone_aop_custom_certificate_expiration_type`,
                      `bgp_hijack_notification`, `http_alert_origin_error`, `workers_alert`,
                      `weekly_account_overview`, `expiring_service_token_alert`, `secondary_dns_all_primaries_failing`,
                      `secondary_dns_zone_validation_warning`, `secondary_dns_primaries_failing`,
                      `secondary_dns_zone_successfully_updated`, `dos_attack_l7`,
                      `dos_attack_l4`, `advanced_ddos_attack_l7_alert`, `advanced_ddos_attack_l4_alert`,
                      `fbm_volumetric_attack`, `fbm_auto_advertisement`, `load_balancing_pool_enablement_alert`,
                      `load_balancing_health_alert`, `g6_health_alert`, `http_alert_edge_error`,
                      `clickhouse_alert_fw_anomaly`, `clickhouse_alert_fw_ent_anomaly`,
                      `failing_logpush_job_disabled_alert`, `scriptmonitor_alert_new_hosts`,
                      `scriptmonitor_alert_new_scripts`, `scriptmonitor_alert_new_malicious_scripts`,
                      `scriptmonitor_alert_new_malicious_url`, `scriptmonitor_alert_new_code_change_detections`,
                      `scriptmonitor_alert_new_max_length_script_url`, `scriptmonitor_alert_new_malicious_hosts`,
                      `sentinel_alert`, `hostname_aop_custom_certificate_expiration_type`,
                      `stream_live_notifications`, `block_notification_new_block`,
                      `block_notification_review_rejected`, `block_notification_review_accepted`,
                      `web_analytics_metrics_update`, `workers_uptime`.'
                    type: string
                  description:
                    description: Description of the notification policy.
                    type: string
                  emailIntegration:
                    description: The email id to which the notification should be
                      dispatched. One of email, webhooks, or PagerDuty mechanisms
                      is required.
                    items:
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  enabled:
                    description: The status of the notification policy.
                    type: boolean
                  filters:
                    description: An optional nested block of filters that applies
                      to the selected `alert_type`. A key-value map that specifies
                      the type of filter and the values to match against (refer to
                      the alert type block for available fields).
                    items:
                      properties:
                        enabled:
                          description: State of the pool to alert on.
                          items:
                            type: string
                          type: array
                        eventSource:
                          description: Source configuration to alert on for pool or
                            origin.
                          items:
                            type: string
                          type: array
                        eventType:
                          description: Stream event type to alert on.
                          items:
                            type: string
                          type: array
                        healthCheckId:
                          description: Identifier health check. Required when using
                            `filters.0.status`.
                          items:
                            type: string
                          type: array
                        inputId:
                          description: Stream input id to alert on.
                          items:
                            type: string
                          type: array
                        limit:
                          description: 'A numerical limit. Example: `100`.'
                          items:
                            type: string
                          type: array
                        newHealth:
                          description: Health status to alert on for pool or origin.
                          items:
                            type: string
                          type: array
                        packetsPerSecond:
                          description: Packets per second threshold for dos alert.
                          items:
                            type: string
                          type: array
                        poolId:
                          description: Load balancer pool identifier.
                          items:
                            type: string
                          type: array
                        product:
                          description: 'Product name. Available values: `worker_requests`,
                            `worker_durable_objects_requests`, `worker_durable_objects_duration`,
                            `worker_durable_objects_data_transfer`, `worker_durable_objects_stored_data`,
                            `worker_durable_objects_storage_deletes`, `worker_durable_objects_storage_writes`,
                            `worker_durable_objects_storage_reads`.'
                          items:
                            type: string
                          type: array
                        protocol:
                          description: Protocol to alert on for dos.
                          items:
                            type: string
                          type: array
                        requestsPerSecond:
                          description: Requests per second threshold for dos alert.
                          items:
                            type: string
                          type: array
                        services:
                          items:
                            type: string
                          type: array
                        slo:
                          description: 'A numerical limit. Example: `99.9`.'
                          items:
                            type: string
                          type: array
                        status:
                          description: Status to alert on.
                          items:
                            type: string
                          type: array
                        targetHost:
                          description: Target host to alert on for dos.
                          items:
                            type: string
                          type: array
                        targetZoneName:
                          description: Target domain to alert on.
                          items:
                            type: string
                          type: array
                        zones:
                          description: A list of zone identifiers.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  name:
                    description: The name of the notification policy.
                    type: string
                  pagerdutyIntegration:
                    description: The unique id of a configured pagerduty endpoint
                      to which the notification should be dispatched. One of email,
                      webhooks, or PagerDuty mechanisms is required.
                    items:
                      properties:
                        id:
                          type: string
                        name:
                          type: string
                      required:
                      - id
                      type: object
                    type: array
                  webhooksIntegration:
                    description: The unique id of a configured webhooks endpoint to
                      which the notification should be dispatched. One of email, webhooks,
                      or PagerDuty mechanisms is required.
                    items:
                      properties:
                        id:
                          type: string
                        idRef:
                          description: Reference to a PolicyWebhooks to populate id.
                          properties:
                            name:
                              description: Name of the referenced object.
                              type: string
                            policy:
                              description: Policies for referencing.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          required:
                          - name
                          type: object
                        idSelector:
                          description: Selector for a PolicyWebhooks to populate id.
                          properties:
                            matchControllerRef:
                              description: MatchControllerRef ensures an object with
                                the same controller reference as the selecting object
                                is selected.
                              type: boolean
                            matchLabels:
                              additionalProperties:
                                type: string
                              description: MatchLabels ensures an object with matching
                                labels is selected.
                              type: object
                            policy:
                              description: Policies for selection.
                              properties:
                                resolution:
                                  default: Required
                                  description: Resolution specifies whether resolution
                                    of this reference is required. The default is
                                    'Required', which means the reconcile will fail
                                    if the reference cannot be resolved. 'Optional'
                                    means this reference will be a no-op if it cannot
                                    be resolved.
                                  enum:
                                  - Required
                                  - Optional
                                  type: string
                                resolve:
                                  description: Resolve specifies when this reference
                                    should be resolved. The default is 'IfNotPresent',
                                    which will attempt to resolve the reference only
                                    when the corresponding field is not present. Use
                                    'Always' to resolve the reference on every reconcile.
                                  enum:
                                  - Always
                                  - IfNotPresent
                                  type: string
                              type: object
                          type: object
                        name:
                          type: string
                      type: object
                    type: array
                required:
                - alertType
                - enabled
                - name
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: PolicyStatus defines the observed state of Policy.
            properties:
              atProvider:
                properties:
                  created:
                    description: When the notification policy was created.
                    type: string
                  id:
                    type: string
                  modified:
                    description: When the notification policy was last modified.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
