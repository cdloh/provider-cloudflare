---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: ratelimits.zone.cloudflare.upbound.io
spec:
  group: zone.cloudflare.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: RateLimit
    listKind: RateLimitList
    plural: ratelimits
    singular: ratelimit
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: RateLimit is the Schema for the RateLimits API. Provides a Cloudflare
          rate limit resource for a particular zone.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: RateLimitSpec defines the desired state of RateLimit
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  action:
                    description: The action to be performed when the threshold of
                      matched traffic within the period defined is exceeded. The action
                      to be performed when the threshold of matched traffic within
                      the period defined is exceeded.
                    items:
                      properties:
                        mode:
                          description: 'The type of action to perform. Allowable values
                            are ''simulate'', ''ban'', ''challenge'', ''js_challenge''
                            and ''managed_challenge''. The type of action to perform.
                            Available values: `simulate`, `ban`, `challenge`, `js_challenge`,
                            `managed_challenge`.'
                          type: string
                        response:
                          description: Matches HTTP responses before they are returned
                            to the client from Cloudflare. If this is defined, then
                            the entire counting of traffic occurs at this stage. This
                            field is not required. Custom content-type and body to
                            return, this overrides the custom error for the zone.
                            This field is not required. Omission will result in default
                            HTML error page.
                          items:
                            properties:
                              body:
                                description: The body to return, the content here
                                  should conform to the content_type. The body to
                                  return, the content here should conform to the `content_type`.
                                type: string
                              contentType:
                                description: 'The content-type of the body, must be
                                  one of: ''text/plain'', ''text/xml'', ''application/json''.
                                  The content-type of the body. Available values:
                                  `text/plain`, `text/xml`, `application/json`.'
                                type: string
                            type: object
                          type: array
                        timeout:
                          description: 'The time in seconds as an integer to perform
                            the mitigation action. This field is required if the mode
                            is either simulate or ban. Must be the same or greater
                            than the period (min: 1, max: 86400). The time in seconds
                            as an integer to perform the mitigation action. This field
                            is required if the `mode` is either `simulate` or `ban`.
                            Must be the same or greater than the period.'
                          type: number
                      type: object
                    type: array
                  bypassUrlPatterns:
                    description: URLs matching the patterns specified here will be
                      excluded from rate limiting.
                    items:
                      type: string
                    type: array
                  correlate:
                    description: Determines how rate limiting is applied. By default
                      if not specified, rate limiting applies to the clients IP address.
                      Determines how rate limiting is applied. By default if not specified,
                      rate limiting applies to the clients IP address.
                    items:
                      properties:
                        by:
                          description: 'If set to ''nat'', NAT support will be enabled
                            for rate limiting. If set to ''nat'', NAT support will
                            be enabled for rate limiting. Available values: `nat`.'
                          type: string
                      type: object
                    type: array
                  description:
                    description: A note that you can use to describe the reason for
                      a rate limit. This value is sanitized and all tags are removed.
                      A note that you can use to describe the reason for a rate limit.
                      This value is sanitized and all tags are removed.
                    type: string
                  disabled:
                    description: 'Whether this ratelimit is currently disabled. Default:
                      false. Whether this ratelimit is currently disabled. Defaults
                      to `false`.'
                    type: boolean
                  match:
                    description: Determines which traffic the rate limit counts towards
                      the threshold. By default matches all traffic in the zone. See
                      definition below. Determines which traffic the rate limit counts
                      towards the threshold. By default matches all traffic in the
                      zone.
                    items:
                      properties:
                        request:
                          description: Matches HTTP requests (from the client to Cloudflare).
                            See definition below. Matches HTTP requests (from the
                            client to Cloudflare).
                          items:
                            properties:
                              methods:
                                description: 'HTTP Methods, can be a subset [''POST'',''PUT'']
                                  or all [''_ALL_'']. Default: [''_ALL_'']. HTTP Methods
                                  to match traffic on. Available values: `GET`, `POST`,
                                  `PUT`, `DELETE`, `PATCH`, `HEAD`, `_ALL_`.'
                                items:
                                  type: string
                                type: array
                              schemes:
                                description: 'HTTP Schemes, can be one [''HTTPS''],
                                  both [''HTTP'',''HTTPS''] or all [''_ALL_'']. Default:
                                  [''_ALL_'']. HTTP schemes to match traffic on. Available
                                  values: `HTTP`, `HTTPS`, `_ALL_`.'
                                items:
                                  type: string
                                type: array
                              urlPattern:
                                description: 'The URL pattern to match comprised of
                                  the host and path, i.e. example.org/path. Wildcard
                                  are expanded to match applicable traffic, query
                                  strings are not matched. Use _ for all traffic to
                                  your zone. Default: ''_''. The URL pattern to match
                                  comprised of the host and path, i.e. example.org/path.
                                  Wildcard are expanded to match applicable traffic,
                                  query strings are not matched. Use _ for all traffic
                                  to your zone.'
                                type: string
                            type: object
                          type: array
                        response:
                          description: Matches HTTP responses before they are returned
                            to the client from Cloudflare. If this is defined, then
                            the entire counting of traffic occurs at this stage. This
                            field is not required. Matches HTTP responses before they
                            are returned to the client from Cloudflare. If this is
                            defined, then the entire counting of traffic occurs at
                            this stage.
                          items:
                            properties:
                              headers:
                                description: 'block is a list of maps with the following
                                  attributes: List of HTTP headers maps to match the
                                  origin response on.'
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              originTraffic:
                                description: 'Only count traffic that has come from
                                  your origin servers. If true, cached items that
                                  Cloudflare serve will not count towards rate limiting.
                                  Default: true. Only count traffic that has come
                                  from your origin servers. If true, cached items
                                  that Cloudflare serve will not count towards rate
                                  limiting.'
                                type: boolean
                              statuses:
                                description: HTTP Status codes, can be one [403],
                                  many [401,403] or indicate all by not providing
                                  this value. HTTP Status codes, can be one, many
                                  or indicate all by not providing this value.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  period:
                    description: 'The time in seconds to count matching traffic. If
                      the count exceeds threshold within this period the action will
                      be performed (min: 1, max: 86,400). The time in seconds to count
                      matching traffic. If the count exceeds threshold within this
                      period the action will be performed.'
                    type: number
                  threshold:
                    description: 'The threshold that triggers the rate limit mitigations,
                      combine with period. i.e. threshold per period (min: 2, max:
                      1,000,000). The threshold that triggers the rate limit mitigations,
                      combine with period.'
                    type: number
                  zoneId:
                    description: The DNS zone ID to apply rate limiting to. The zone
                      identifier to target for the resource. **Modifying this attribute
                      will force creation of a new resource.**
                    type: string
                  zoneIdRef:
                    description: Reference to a Zone to populate zoneId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  zoneIdSelector:
                    description: Selector for a Zone to populate zoneId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  action:
                    description: The action to be performed when the threshold of
                      matched traffic within the period defined is exceeded. The action
                      to be performed when the threshold of matched traffic within
                      the period defined is exceeded.
                    items:
                      properties:
                        mode:
                          description: 'The type of action to perform. Allowable values
                            are ''simulate'', ''ban'', ''challenge'', ''js_challenge''
                            and ''managed_challenge''. The type of action to perform.
                            Available values: `simulate`, `ban`, `challenge`, `js_challenge`,
                            `managed_challenge`.'
                          type: string
                        response:
                          description: Matches HTTP responses before they are returned
                            to the client from Cloudflare. If this is defined, then
                            the entire counting of traffic occurs at this stage. This
                            field is not required. Custom content-type and body to
                            return, this overrides the custom error for the zone.
                            This field is not required. Omission will result in default
                            HTML error page.
                          items:
                            properties:
                              body:
                                description: The body to return, the content here
                                  should conform to the content_type. The body to
                                  return, the content here should conform to the `content_type`.
                                type: string
                              contentType:
                                description: 'The content-type of the body, must be
                                  one of: ''text/plain'', ''text/xml'', ''application/json''.
                                  The content-type of the body. Available values:
                                  `text/plain`, `text/xml`, `application/json`.'
                                type: string
                            type: object
                          type: array
                        timeout:
                          description: 'The time in seconds as an integer to perform
                            the mitigation action. This field is required if the mode
                            is either simulate or ban. Must be the same or greater
                            than the period (min: 1, max: 86400). The time in seconds
                            as an integer to perform the mitigation action. This field
                            is required if the `mode` is either `simulate` or `ban`.
                            Must be the same or greater than the period.'
                          type: number
                      type: object
                    type: array
                  bypassUrlPatterns:
                    description: URLs matching the patterns specified here will be
                      excluded from rate limiting.
                    items:
                      type: string
                    type: array
                  correlate:
                    description: Determines how rate limiting is applied. By default
                      if not specified, rate limiting applies to the clients IP address.
                      Determines how rate limiting is applied. By default if not specified,
                      rate limiting applies to the clients IP address.
                    items:
                      properties:
                        by:
                          description: 'If set to ''nat'', NAT support will be enabled
                            for rate limiting. If set to ''nat'', NAT support will
                            be enabled for rate limiting. Available values: `nat`.'
                          type: string
                      type: object
                    type: array
                  description:
                    description: A note that you can use to describe the reason for
                      a rate limit. This value is sanitized and all tags are removed.
                      A note that you can use to describe the reason for a rate limit.
                      This value is sanitized and all tags are removed.
                    type: string
                  disabled:
                    description: 'Whether this ratelimit is currently disabled. Default:
                      false. Whether this ratelimit is currently disabled. Defaults
                      to `false`.'
                    type: boolean
                  match:
                    description: Determines which traffic the rate limit counts towards
                      the threshold. By default matches all traffic in the zone. See
                      definition below. Determines which traffic the rate limit counts
                      towards the threshold. By default matches all traffic in the
                      zone.
                    items:
                      properties:
                        request:
                          description: Matches HTTP requests (from the client to Cloudflare).
                            See definition below. Matches HTTP requests (from the
                            client to Cloudflare).
                          items:
                            properties:
                              methods:
                                description: 'HTTP Methods, can be a subset [''POST'',''PUT'']
                                  or all [''_ALL_'']. Default: [''_ALL_'']. HTTP Methods
                                  to match traffic on. Available values: `GET`, `POST`,
                                  `PUT`, `DELETE`, `PATCH`, `HEAD`, `_ALL_`.'
                                items:
                                  type: string
                                type: array
                              schemes:
                                description: 'HTTP Schemes, can be one [''HTTPS''],
                                  both [''HTTP'',''HTTPS''] or all [''_ALL_'']. Default:
                                  [''_ALL_'']. HTTP schemes to match traffic on. Available
                                  values: `HTTP`, `HTTPS`, `_ALL_`.'
                                items:
                                  type: string
                                type: array
                              urlPattern:
                                description: 'The URL pattern to match comprised of
                                  the host and path, i.e. example.org/path. Wildcard
                                  are expanded to match applicable traffic, query
                                  strings are not matched. Use _ for all traffic to
                                  your zone. Default: ''_''. The URL pattern to match
                                  comprised of the host and path, i.e. example.org/path.
                                  Wildcard are expanded to match applicable traffic,
                                  query strings are not matched. Use _ for all traffic
                                  to your zone.'
                                type: string
                            type: object
                          type: array
                        response:
                          description: Matches HTTP responses before they are returned
                            to the client from Cloudflare. If this is defined, then
                            the entire counting of traffic occurs at this stage. This
                            field is not required. Matches HTTP responses before they
                            are returned to the client from Cloudflare. If this is
                            defined, then the entire counting of traffic occurs at
                            this stage.
                          items:
                            properties:
                              headers:
                                description: 'block is a list of maps with the following
                                  attributes: List of HTTP headers maps to match the
                                  origin response on.'
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              originTraffic:
                                description: 'Only count traffic that has come from
                                  your origin servers. If true, cached items that
                                  Cloudflare serve will not count towards rate limiting.
                                  Default: true. Only count traffic that has come
                                  from your origin servers. If true, cached items
                                  that Cloudflare serve will not count towards rate
                                  limiting.'
                                type: boolean
                              statuses:
                                description: HTTP Status codes, can be one [403],
                                  many [401,403] or indicate all by not providing
                                  this value. HTTP Status codes, can be one, many
                                  or indicate all by not providing this value.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  period:
                    description: 'The time in seconds to count matching traffic. If
                      the count exceeds threshold within this period the action will
                      be performed (min: 1, max: 86,400). The time in seconds to count
                      matching traffic. If the count exceeds threshold within this
                      period the action will be performed.'
                    type: number
                  threshold:
                    description: 'The threshold that triggers the rate limit mitigations,
                      combine with period. i.e. threshold per period (min: 2, max:
                      1,000,000). The threshold that triggers the rate limit mitigations,
                      combine with period.'
                    type: number
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: action is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.action)
                || has(self.initProvider.action)'
            - message: period is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.period)
                || has(self.initProvider.period)'
            - message: threshold is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.threshold)
                || has(self.initProvider.threshold)'
          status:
            description: RateLimitStatus defines the observed state of RateLimit.
            properties:
              atProvider:
                properties:
                  action:
                    description: The action to be performed when the threshold of
                      matched traffic within the period defined is exceeded. The action
                      to be performed when the threshold of matched traffic within
                      the period defined is exceeded.
                    items:
                      properties:
                        mode:
                          description: 'The type of action to perform. Allowable values
                            are ''simulate'', ''ban'', ''challenge'', ''js_challenge''
                            and ''managed_challenge''. The type of action to perform.
                            Available values: `simulate`, `ban`, `challenge`, `js_challenge`,
                            `managed_challenge`.'
                          type: string
                        response:
                          description: Matches HTTP responses before they are returned
                            to the client from Cloudflare. If this is defined, then
                            the entire counting of traffic occurs at this stage. This
                            field is not required. Custom content-type and body to
                            return, this overrides the custom error for the zone.
                            This field is not required. Omission will result in default
                            HTML error page.
                          items:
                            properties:
                              body:
                                description: The body to return, the content here
                                  should conform to the content_type. The body to
                                  return, the content here should conform to the `content_type`.
                                type: string
                              contentType:
                                description: 'The content-type of the body, must be
                                  one of: ''text/plain'', ''text/xml'', ''application/json''.
                                  The content-type of the body. Available values:
                                  `text/plain`, `text/xml`, `application/json`.'
                                type: string
                            type: object
                          type: array
                        timeout:
                          description: 'The time in seconds as an integer to perform
                            the mitigation action. This field is required if the mode
                            is either simulate or ban. Must be the same or greater
                            than the period (min: 1, max: 86400). The time in seconds
                            as an integer to perform the mitigation action. This field
                            is required if the `mode` is either `simulate` or `ban`.
                            Must be the same or greater than the period.'
                          type: number
                      type: object
                    type: array
                  bypassUrlPatterns:
                    description: URLs matching the patterns specified here will be
                      excluded from rate limiting.
                    items:
                      type: string
                    type: array
                  correlate:
                    description: Determines how rate limiting is applied. By default
                      if not specified, rate limiting applies to the clients IP address.
                      Determines how rate limiting is applied. By default if not specified,
                      rate limiting applies to the clients IP address.
                    items:
                      properties:
                        by:
                          description: 'If set to ''nat'', NAT support will be enabled
                            for rate limiting. If set to ''nat'', NAT support will
                            be enabled for rate limiting. Available values: `nat`.'
                          type: string
                      type: object
                    type: array
                  description:
                    description: A note that you can use to describe the reason for
                      a rate limit. This value is sanitized and all tags are removed.
                      A note that you can use to describe the reason for a rate limit.
                      This value is sanitized and all tags are removed.
                    type: string
                  disabled:
                    description: 'Whether this ratelimit is currently disabled. Default:
                      false. Whether this ratelimit is currently disabled. Defaults
                      to `false`.'
                    type: boolean
                  id:
                    description: The Rate limit ID.
                    type: string
                  match:
                    description: Determines which traffic the rate limit counts towards
                      the threshold. By default matches all traffic in the zone. See
                      definition below. Determines which traffic the rate limit counts
                      towards the threshold. By default matches all traffic in the
                      zone.
                    items:
                      properties:
                        request:
                          description: Matches HTTP requests (from the client to Cloudflare).
                            See definition below. Matches HTTP requests (from the
                            client to Cloudflare).
                          items:
                            properties:
                              methods:
                                description: 'HTTP Methods, can be a subset [''POST'',''PUT'']
                                  or all [''_ALL_'']. Default: [''_ALL_'']. HTTP Methods
                                  to match traffic on. Available values: `GET`, `POST`,
                                  `PUT`, `DELETE`, `PATCH`, `HEAD`, `_ALL_`.'
                                items:
                                  type: string
                                type: array
                              schemes:
                                description: 'HTTP Schemes, can be one [''HTTPS''],
                                  both [''HTTP'',''HTTPS''] or all [''_ALL_'']. Default:
                                  [''_ALL_'']. HTTP schemes to match traffic on. Available
                                  values: `HTTP`, `HTTPS`, `_ALL_`.'
                                items:
                                  type: string
                                type: array
                              urlPattern:
                                description: 'The URL pattern to match comprised of
                                  the host and path, i.e. example.org/path. Wildcard
                                  are expanded to match applicable traffic, query
                                  strings are not matched. Use _ for all traffic to
                                  your zone. Default: ''_''. The URL pattern to match
                                  comprised of the host and path, i.e. example.org/path.
                                  Wildcard are expanded to match applicable traffic,
                                  query strings are not matched. Use _ for all traffic
                                  to your zone.'
                                type: string
                            type: object
                          type: array
                        response:
                          description: Matches HTTP responses before they are returned
                            to the client from Cloudflare. If this is defined, then
                            the entire counting of traffic occurs at this stage. This
                            field is not required. Matches HTTP responses before they
                            are returned to the client from Cloudflare. If this is
                            defined, then the entire counting of traffic occurs at
                            this stage.
                          items:
                            properties:
                              headers:
                                description: 'block is a list of maps with the following
                                  attributes: List of HTTP headers maps to match the
                                  origin response on.'
                                items:
                                  additionalProperties:
                                    type: string
                                  type: object
                                type: array
                              originTraffic:
                                description: 'Only count traffic that has come from
                                  your origin servers. If true, cached items that
                                  Cloudflare serve will not count towards rate limiting.
                                  Default: true. Only count traffic that has come
                                  from your origin servers. If true, cached items
                                  that Cloudflare serve will not count towards rate
                                  limiting.'
                                type: boolean
                              statuses:
                                description: HTTP Status codes, can be one [403],
                                  many [401,403] or indicate all by not providing
                                  this value. HTTP Status codes, can be one, many
                                  or indicate all by not providing this value.
                                items:
                                  type: number
                                type: array
                            type: object
                          type: array
                      type: object
                    type: array
                  period:
                    description: 'The time in seconds to count matching traffic. If
                      the count exceeds threshold within this period the action will
                      be performed (min: 1, max: 86,400). The time in seconds to count
                      matching traffic. If the count exceeds threshold within this
                      period the action will be performed.'
                    type: number
                  threshold:
                    description: 'The threshold that triggers the rate limit mitigations,
                      combine with period. i.e. threshold per period (min: 2, max:
                      1,000,000). The threshold that triggers the rate limit mitigations,
                      combine with period.'
                    type: number
                  zoneId:
                    description: The DNS zone ID to apply rate limiting to. The zone
                      identifier to target for the resource. **Modifying this attribute
                      will force creation of a new resource.**
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
