---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.12.1
  name: applications.spectrum.cloudflare.upbound.io
spec:
  group: spectrum.cloudflare.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Application is the Schema for the Applications API. Provides
          a Cloudflare Spectrum Application resource.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ApplicationSpec defines the desired state of Application
            properties:
              deletionPolicy:
                default: Delete
                description: 'DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource. This field is planned to be deprecated
                  in favor of the ManagementPolicies field in a future release. Currently,
                  both could be set independently and non-default values would be
                  honored if the feature flag is enabled. See the design doc for more
                  information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223'
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  argoSmartRouting:
                    description: . Enables Argo Smart Routing. Defaults to false.
                      Enables Argo Smart Routing.
                    type: boolean
                  dns:
                    description: The name and type of DNS record for the Spectrum
                      application. Fields documented below. The name and type of DNS
                      record for the Spectrum application.
                    items:
                      properties:
                        name:
                          description: The name of the DNS record associated with
                            the application.i.e. ssh.example.com. The name of the
                            DNS record associated with the application.
                          type: string
                        type:
                          description: 'The type of DNS record associated with the
                            application. Valid values: CNAME. The type of DNS record
                            associated with the application.'
                          type: string
                      type: object
                    type: array
                  edgeIps:
                    description: . A list of edge IPs (IPv4 and/or IPv6) to configure
                      Spectrum application to. Requires Bring Your Own IP provisioned.
                      The anycast edge IP configuration for the hostname of this application.
                    items:
                      properties:
                        connectivity:
                          description: 'The IP versions supported for inbound connections
                            on Spectrum anycast IPs. Required when `type` is not `static`.
                            Available values: `all`, `ipv4`, `ipv6`.'
                          type: string
                        ips:
                          description: The collection of customer owned IPs to broadcast
                            via anycast for this hostname and application. Requires
                            [Bring Your Own IP](https://developers.cloudflare.com/spectrum/getting-started/byoip/)
                            provisioned.
                          items:
                            type: string
                          type: array
                        type:
                          description: 'The type of DNS record associated with the
                            application. Valid values: CNAME. The type of edge IP
                            configuration specified. Available values: `dynamic`,
                            `static`.'
                          type: string
                      type: object
                    type: array
                  ipFirewall:
                    description: Enables the IP Firewall for this application. Defaults
                      to true. Enables the IP Firewall for this application.
                    type: boolean
                  originDirect:
                    description: A list of destination addresses to the origin. e.g.
                      tcp://192.0.2.1:22. A list of destination addresses to the origin.
                      e.g. `tcp://192.0.2.1:22`.
                    items:
                      type: string
                    type: array
                  originDns:
                    description: A destination DNS addresses to the origin. Fields
                      documented below. A destination DNS addresses to the origin.
                    items:
                      properties:
                        name:
                          description: The name of the DNS record associated with
                            the application.i.e. ssh.example.com. Fully qualified
                            domain name of the origin.
                          type: string
                      type: object
                    type: array
                  originPort:
                    description: If using origin_dns and not origin_port_range, this
                      is a required attribute. Origin port to proxy traffice to e.g.
                      22. Origin port to proxy traffice to. Conflicts with `origin_port_range`.
                    type: number
                  originPortRange:
                    description: If using origin_dns and not origin_port, this is
                      a required attribute. Origin port range to proxy traffice to.
                      When using a range, the protocol field must also specify a range,
                      e.g. tcp/22-23. Fields documented below. Origin port range to
                      proxy traffice to. When using a range, the protocol field must
                      also specify a range, e.g. `tcp/22-23`. Conflicts with `origin_port`.
                    items:
                      properties:
                        end:
                          description: Upper bound of the origin port range, e.g.
                            2000 Upper bound of the origin port range.
                          type: number
                        start:
                          description: Lower bound of the origin port range, e.g.
                            1000 Lower bound of the origin port range.
                          type: number
                      type: object
                    type: array
                  protocol:
                    description: The port configuration at Cloudflareâ€™s edge. e.g.
                      tcp/22. The port configuration at Cloudflare's edge. e.g. `tcp/22`.
                    type: string
                  proxyProtocol:
                    description: 'Enables a proxy protocol to the origin. Valid values
                      are: off, v1, v2, and simple. Defaults to off. Enables a proxy
                      protocol to the origin. Available values: `off`, `v1`, `v2`,
                      `simple`.'
                    type: string
                  tls:
                    description: 'TLS configuration option for Cloudflare to connect
                      to your origin. Valid values are: off, flexible, full and strict.
                      Defaults to off. TLS configuration option for Cloudflare to
                      connect to your origin. Available values: `off`, `flexible`,
                      `full`, `strict`.'
                    type: string
                  trafficType:
                    description: 'Sets application type. Valid values are: direct,
                      http, https. Defaults to direct. Sets application type. Available
                      values: `direct`, `http`, `https`.'
                    type: string
                  zoneId:
                    description: The DNS zone ID to add the application to The zone
                      identifier to target for the resource.
                    type: string
                  zoneIdRef:
                    description: Reference to a Zone in zone to populate zoneId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  zoneIdSelector:
                    description: Selector for a Zone in zone to populate zoneId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                type: object
              initProvider:
                description: THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. InitProvider
                  holds the same fields as ForProvider, with the exception of Identifier
                  and other resource reference fields. The fields that are in InitProvider
                  are merged into ForProvider when the resource is created. The same
                  fields are also added to the terraform ignore_changes hook, to avoid
                  updating them after creation. This is useful for fields that are
                  required on creation, but we do not desire to update them after
                  creation, for example because of an external controller is managing
                  them, like an autoscaler.
                properties:
                  argoSmartRouting:
                    description: . Enables Argo Smart Routing. Defaults to false.
                      Enables Argo Smart Routing.
                    type: boolean
                  dns:
                    description: The name and type of DNS record for the Spectrum
                      application. Fields documented below. The name and type of DNS
                      record for the Spectrum application.
                    items:
                      properties:
                        name:
                          description: The name of the DNS record associated with
                            the application.i.e. ssh.example.com. The name of the
                            DNS record associated with the application.
                          type: string
                        type:
                          description: 'The type of DNS record associated with the
                            application. Valid values: CNAME. The type of DNS record
                            associated with the application.'
                          type: string
                      type: object
                    type: array
                  edgeIps:
                    description: . A list of edge IPs (IPv4 and/or IPv6) to configure
                      Spectrum application to. Requires Bring Your Own IP provisioned.
                      The anycast edge IP configuration for the hostname of this application.
                    items:
                      properties:
                        connectivity:
                          description: 'The IP versions supported for inbound connections
                            on Spectrum anycast IPs. Required when `type` is not `static`.
                            Available values: `all`, `ipv4`, `ipv6`.'
                          type: string
                        ips:
                          description: The collection of customer owned IPs to broadcast
                            via anycast for this hostname and application. Requires
                            [Bring Your Own IP](https://developers.cloudflare.com/spectrum/getting-started/byoip/)
                            provisioned.
                          items:
                            type: string
                          type: array
                        type:
                          description: 'The type of DNS record associated with the
                            application. Valid values: CNAME. The type of edge IP
                            configuration specified. Available values: `dynamic`,
                            `static`.'
                          type: string
                      type: object
                    type: array
                  ipFirewall:
                    description: Enables the IP Firewall for this application. Defaults
                      to true. Enables the IP Firewall for this application.
                    type: boolean
                  originDirect:
                    description: A list of destination addresses to the origin. e.g.
                      tcp://192.0.2.1:22. A list of destination addresses to the origin.
                      e.g. `tcp://192.0.2.1:22`.
                    items:
                      type: string
                    type: array
                  originDns:
                    description: A destination DNS addresses to the origin. Fields
                      documented below. A destination DNS addresses to the origin.
                    items:
                      properties:
                        name:
                          description: The name of the DNS record associated with
                            the application.i.e. ssh.example.com. Fully qualified
                            domain name of the origin.
                          type: string
                      type: object
                    type: array
                  originPort:
                    description: If using origin_dns and not origin_port_range, this
                      is a required attribute. Origin port to proxy traffice to e.g.
                      22. Origin port to proxy traffice to. Conflicts with `origin_port_range`.
                    type: number
                  originPortRange:
                    description: If using origin_dns and not origin_port, this is
                      a required attribute. Origin port range to proxy traffice to.
                      When using a range, the protocol field must also specify a range,
                      e.g. tcp/22-23. Fields documented below. Origin port range to
                      proxy traffice to. When using a range, the protocol field must
                      also specify a range, e.g. `tcp/22-23`. Conflicts with `origin_port`.
                    items:
                      properties:
                        end:
                          description: Upper bound of the origin port range, e.g.
                            2000 Upper bound of the origin port range.
                          type: number
                        start:
                          description: Lower bound of the origin port range, e.g.
                            1000 Lower bound of the origin port range.
                          type: number
                      type: object
                    type: array
                  protocol:
                    description: The port configuration at Cloudflareâ€™s edge. e.g.
                      tcp/22. The port configuration at Cloudflare's edge. e.g. `tcp/22`.
                    type: string
                  proxyProtocol:
                    description: 'Enables a proxy protocol to the origin. Valid values
                      are: off, v1, v2, and simple. Defaults to off. Enables a proxy
                      protocol to the origin. Available values: `off`, `v1`, `v2`,
                      `simple`.'
                    type: string
                  tls:
                    description: 'TLS configuration option for Cloudflare to connect
                      to your origin. Valid values are: off, flexible, full and strict.
                      Defaults to off. TLS configuration option for Cloudflare to
                      connect to your origin. Available values: `off`, `flexible`,
                      `full`, `strict`.'
                    type: string
                  trafficType:
                    description: 'Sets application type. Valid values are: direct,
                      http, https. Defaults to direct. Sets application type. Available
                      values: `direct`, `http`, `https`.'
                    type: string
                type: object
              managementPolicies:
                default:
                - '*'
                description: 'THIS IS AN ALPHA FIELD. Do not use it in production.
                  It is not honored unless the relevant Crossplane feature flag is
                  enabled, and may be changed or removed without notice. ManagementPolicies
                  specify the array of actions Crossplane is allowed to take on the
                  managed and external resources. This field is planned to replace
                  the DeletionPolicy field in a future release. Currently, both could
                  be set independently and non-default values would be honored if
                  the feature flag is enabled. If both are custom, the DeletionPolicy
                  field will be ignored. See the design doc for more information:
                  https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md'
                items:
                  description: A ManagementAction represents an action that the Crossplane
                    controllers can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
            x-kubernetes-validations:
            - message: dns is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.dns)
                || has(self.initProvider.dns)'
            - message: protocol is a required parameter
              rule: '!(''*'' in self.managementPolicies || ''Create'' in self.managementPolicies
                || ''Update'' in self.managementPolicies) || has(self.forProvider.protocol)
                || has(self.initProvider.protocol)'
          status:
            description: ApplicationStatus defines the observed state of Application.
            properties:
              atProvider:
                properties:
                  argoSmartRouting:
                    description: . Enables Argo Smart Routing. Defaults to false.
                      Enables Argo Smart Routing.
                    type: boolean
                  dns:
                    description: The name and type of DNS record for the Spectrum
                      application. Fields documented below. The name and type of DNS
                      record for the Spectrum application.
                    items:
                      properties:
                        name:
                          description: The name of the DNS record associated with
                            the application.i.e. ssh.example.com. The name of the
                            DNS record associated with the application.
                          type: string
                        type:
                          description: 'The type of DNS record associated with the
                            application. Valid values: CNAME. The type of DNS record
                            associated with the application.'
                          type: string
                      type: object
                    type: array
                  edgeIps:
                    description: . A list of edge IPs (IPv4 and/or IPv6) to configure
                      Spectrum application to. Requires Bring Your Own IP provisioned.
                      The anycast edge IP configuration for the hostname of this application.
                    items:
                      properties:
                        connectivity:
                          description: 'The IP versions supported for inbound connections
                            on Spectrum anycast IPs. Required when `type` is not `static`.
                            Available values: `all`, `ipv4`, `ipv6`.'
                          type: string
                        ips:
                          description: The collection of customer owned IPs to broadcast
                            via anycast for this hostname and application. Requires
                            [Bring Your Own IP](https://developers.cloudflare.com/spectrum/getting-started/byoip/)
                            provisioned.
                          items:
                            type: string
                          type: array
                        type:
                          description: 'The type of DNS record associated with the
                            application. Valid values: CNAME. The type of edge IP
                            configuration specified. Available values: `dynamic`,
                            `static`.'
                          type: string
                      type: object
                    type: array
                  id:
                    description: Unique identifier in the API for the spectrum application.
                    type: string
                  ipFirewall:
                    description: Enables the IP Firewall for this application. Defaults
                      to true. Enables the IP Firewall for this application.
                    type: boolean
                  originDirect:
                    description: A list of destination addresses to the origin. e.g.
                      tcp://192.0.2.1:22. A list of destination addresses to the origin.
                      e.g. `tcp://192.0.2.1:22`.
                    items:
                      type: string
                    type: array
                  originDns:
                    description: A destination DNS addresses to the origin. Fields
                      documented below. A destination DNS addresses to the origin.
                    items:
                      properties:
                        name:
                          description: The name of the DNS record associated with
                            the application.i.e. ssh.example.com. Fully qualified
                            domain name of the origin.
                          type: string
                      type: object
                    type: array
                  originPort:
                    description: If using origin_dns and not origin_port_range, this
                      is a required attribute. Origin port to proxy traffice to e.g.
                      22. Origin port to proxy traffice to. Conflicts with `origin_port_range`.
                    type: number
                  originPortRange:
                    description: If using origin_dns and not origin_port, this is
                      a required attribute. Origin port range to proxy traffice to.
                      When using a range, the protocol field must also specify a range,
                      e.g. tcp/22-23. Fields documented below. Origin port range to
                      proxy traffice to. When using a range, the protocol field must
                      also specify a range, e.g. `tcp/22-23`. Conflicts with `origin_port`.
                    items:
                      properties:
                        end:
                          description: Upper bound of the origin port range, e.g.
                            2000 Upper bound of the origin port range.
                          type: number
                        start:
                          description: Lower bound of the origin port range, e.g.
                            1000 Lower bound of the origin port range.
                          type: number
                      type: object
                    type: array
                  protocol:
                    description: The port configuration at Cloudflareâ€™s edge. e.g.
                      tcp/22. The port configuration at Cloudflare's edge. e.g. `tcp/22`.
                    type: string
                  proxyProtocol:
                    description: 'Enables a proxy protocol to the origin. Valid values
                      are: off, v1, v2, and simple. Defaults to off. Enables a proxy
                      protocol to the origin. Available values: `off`, `v1`, `v2`,
                      `simple`.'
                    type: string
                  tls:
                    description: 'TLS configuration option for Cloudflare to connect
                      to your origin. Valid values are: off, flexible, full and strict.
                      Defaults to off. TLS configuration option for Cloudflare to
                      connect to your origin. Available values: `off`, `flexible`,
                      `full`, `strict`.'
                    type: string
                  trafficType:
                    description: 'Sets application type. Valid values are: direct,
                      http, https. Defaults to direct. Sets application type. Available
                      values: `direct`, `http`, `https`.'
                    type: string
                  zoneId:
                    description: The DNS zone ID to add the application to The zone
                      identifier to target for the resource.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
