---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: projects.pages.cloudflare.upbound.io
spec:
  group: pages.cloudflare.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - cloudflare
    kind: Project
    listKind: ProjectList
    plural: projects
    singular: project
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: Project is the Schema for the Projects API. <no value>
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProjectSpec defines the desired state of Project
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  accountId:
                    description: The account identifier to target for the resource.
                    type: string
                  accountIdRef:
                    description: Reference to a Account in account to populate accountId.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  accountIdSelector:
                    description: Selector for a Account in account to populate accountId.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  buildConfig:
                    description: Configuration for the project build process.
                    items:
                      properties:
                        buildCommand:
                          description: Command used to build project.
                          type: string
                        destinationDir:
                          description: Output directory of the build.
                          type: string
                        rootDir:
                          description: Directory to run the command.
                          type: string
                        webAnalyticsTag:
                          description: The classifying tag for analytics.
                          type: string
                        webAnalyticsToken:
                          description: The auth token for analytics.
                          type: string
                      type: object
                    type: array
                  deploymentConfigs:
                    description: Configuration for deployments in a project.
                    items:
                      properties:
                        preview:
                          description: Configuration for preview deploys.
                          items:
                            properties:
                              compatibilityDate:
                                description: Compatibility date used for Pages Functions.
                                type: string
                              compatibilityFlags:
                                description: Compatibility flags used for Pages Functions.
                                items:
                                  type: string
                                type: array
                              d1Databases:
                                additionalProperties:
                                  type: string
                                description: D1 Databases used for Pages Functions.
                                type: object
                              durableObjectNamespaces:
                                additionalProperties:
                                  type: string
                                description: Durable Object namespaces used for Pages
                                  Functions.
                                type: object
                              environmentVariables:
                                additionalProperties:
                                  type: string
                                description: Environment variables for Pages Functions.
                                type: object
                              kvNamespaces:
                                additionalProperties:
                                  type: string
                                description: KV namespaces used for Pages Functions.
                                type: object
                              r2Buckets:
                                additionalProperties:
                                  type: string
                                description: R2 Buckets used for Pages Functions.
                                type: object
                            type: object
                          type: array
                        production:
                          description: Configuration for production deploys.
                          items:
                            properties:
                              compatibilityDate:
                                description: Compatibility date used for Pages Functions.
                                type: string
                              compatibilityFlags:
                                description: Compatibility flags used for Pages Functions.
                                items:
                                  type: string
                                type: array
                              d1Databases:
                                additionalProperties:
                                  type: string
                                description: D1 Databases used for Pages Functions.
                                type: object
                              durableObjectNamespaces:
                                additionalProperties:
                                  type: string
                                description: Durable Object namespaces used for Pages
                                  Functions.
                                type: object
                              environmentVariables:
                                additionalProperties:
                                  type: string
                                description: Environment variables for Pages Functions.
                                type: object
                              kvNamespaces:
                                additionalProperties:
                                  type: string
                                description: KV namespaces used for Pages Functions.
                                type: object
                              r2Buckets:
                                additionalProperties:
                                  type: string
                                description: R2 Buckets used for Pages Functions.
                                type: object
                            type: object
                          type: array
                      type: object
                    type: array
                  name:
                    description: Name of the project.
                    type: string
                  productionBranch:
                    description: The name of the branch that is used for the production
                      environment.
                    type: string
                  source:
                    description: Configuration for the project source.
                    items:
                      properties:
                        config:
                          description: Configuration for the source of the Cloudflare
                            Pages project.
                          items:
                            properties:
                              deploymentsEnabled:
                                description: Toggle deployments on this repo. Defaults
                                  to `true`.
                                type: boolean
                              owner:
                                description: Project owner username.
                                type: string
                              prCommentsEnabled:
                                description: Enable Pages to comment on Pull Requests.
                                  Defaults to `true`.
                                type: boolean
                              previewBranchExcludes:
                                description: Branches will be excluded from automatic
                                  deployment.
                                items:
                                  type: string
                                type: array
                              previewBranchIncludes:
                                description: Branches will be included for automatic
                                  deployment.
                                items:
                                  type: string
                                type: array
                              previewDeploymentSetting:
                                description: Preview Deployment Setting. Defaults
                                  to `all`.
                                type: string
                              productionBranch:
                                description: Project production branch name.
                                type: string
                              productionDeploymentEnabled:
                                description: Enable production deployments. Defaults
                                  to `true`.
                                type: boolean
                              repoName:
                                description: Project repository name.
                                type: string
                            required:
                            - productionBranch
                            type: object
                          type: array
                        type:
                          description: Project host type.
                          type: string
                      type: object
                    type: array
                required:
                - name
                - productionBranch
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ProjectStatus defines the observed state of Project.
            properties:
              atProvider:
                properties:
                  createdOn:
                    description: When the project was created.
                    type: string
                  domains:
                    description: A list of associated custom domains for the project.
                    items:
                      type: string
                    type: array
                  id:
                    type: string
                  subdomain:
                    description: The Cloudflare subdomain associated with the project.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
